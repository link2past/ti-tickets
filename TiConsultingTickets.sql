--CREATE DATABASE TITICKETS
--GO

--USE TITICKETS
--GO

----------------------------TABLA ESTADO----------------------------
CREATE TABLE DBO.ESTADO(
	ID_ESTADO INT PRIMARY KEY NOT NULL,
	DESCRIPCION VARCHAR(50)
)
GO

INSERT INTO ESTADO (ID_ESTADO, DESCRIPCION) VALUES (1, 'ACTIVO')
INSERT INTO ESTADO (ID_ESTADO, DESCRIPCION) VALUES (2, 'INACTIVO')
GO

CREATE PROCEDURE TI_SP_CONSULTAR_ESTADO(
	@ID_ESTADO INT,
	@DESCRIPCION VARCHAR(50)
)
AS
BEGIN

	SET NOCOUNT ON
	
	IF (@DESCRIPCION IS NOT NULL)
		SET @DESCRIPCION = '%' + RTRIM(@DESCRIPCION) + '%'
	
	SELECT
		ID_ESTADO, DESCRIPCION
	FROM
		ESTADO 
	WHERE
		(@ID_ESTADO IS NULL OR ID_ESTADO = @ID_ESTADO)
		AND (@DESCRIPCION IS NULL OR DESCRIPCION LIKE @DESCRIPCION)
	ORDER BY
		ID_ESTADO
	
	SET NOCOUNT OFF

END
GO


----------------------------TABLA TIPO_USUARIO----------------------------
CREATE TABLE DBO.TIPO_USUARIO(
	ID_TIPO_USUARIO INT PRIMARY KEY NOT NULL,
	DESCRIPCION VARCHAR(50),
	ID_ESTADO INT FOREIGN KEY REFERENCES ESTADO(ID_ESTADO),
	FECHA_CREACION DATETIME,
	USUARIO_CREACION VARCHAR(20),
	FECHA_MODIFICACION DATETIME,
	USUARIO_MODIFICACION VARCHAR(20)
)
GO

INSERT INTO TIPO_USUARIO (ID_TIPO_USUARIO, DESCRIPCION, ID_ESTADO, FECHA_CREACION, USUARIO_CREACION) VALUES (1, 'CLIENTE', 1, GETDATE(), 'OALVAREZ')
INSERT INTO TIPO_USUARIO (ID_TIPO_USUARIO, DESCRIPCION, ID_ESTADO, FECHA_CREACION, USUARIO_CREACION) VALUES (2, 'MODERADOR', 1, GETDATE(), 'OALVAREZ')
INSERT INTO TIPO_USUARIO (ID_TIPO_USUARIO, DESCRIPCION, ID_ESTADO, FECHA_CREACION, USUARIO_CREACION) VALUES (3, 'TÉCNICO', 1, GETDATE(), 'OALVAREZ')
INSERT INTO TIPO_USUARIO (ID_TIPO_USUARIO, DESCRIPCION, ID_ESTADO, FECHA_CREACION, USUARIO_CREACION) VALUES (4, 'ADMINISTRADOR', 1, GETDATE(), 'OALVAREZ')
GO

CREATE PROCEDURE TI_SP_CONSULTAR_TIPO_USUARIO(
	@ID_TIPO_USUARIO INT,
	@DESCRIPCION VARCHAR(50),
	@ID_ESTADO INT
)
AS
BEGIN

	SET NOCOUNT ON
	
	IF (@DESCRIPCION IS NOT NULL)
		SET @DESCRIPCION = '%' + RTRIM(@DESCRIPCION) + '%'
	
	SELECT
		TU.ID_TIPO_USUARIO, TU.DESCRIPCION, TU.ID_ESTADO, E.DESCRIPCION
	FROM
		TIPO_USUARIO TU
		INNER JOIN ESTADO E ON TU.ID_ESTADO = E.ID_ESTADO
	WHERE
		(@ID_TIPO_USUARIO IS NULL OR TU.ID_TIPO_USUARIO = @ID_TIPO_USUARIO)
		AND (@DESCRIPCION IS NULL OR TU.DESCRIPCION LIKE @DESCRIPCION)
		AND (@ID_ESTADO IS NULL OR TU.ID_ESTADO = @ID_ESTADO)
	ORDER BY
		TU.ID_TIPO_USUARIO
	
	SET NOCOUNT OFF

END
GO

ALTER PROCEDURE TI_SP_REGISTRAR_TIPO_USUARIO(
	@DESCRIPCION VARCHAR(50),
	@ID_ESTADO INT, 
	@USUARIO_CREACION VARCHAR(20), 
	@ID INT OUTPUT
)
AS
BEGIN

	SET NOCOUNT ON
	
	DECLARE 	@ID_TIPO_USUARIO INT
	SELECT @ID_TIPO_USUARIO = MAX(ID_TIPO_USUARIO) + 1 FROM TIPO_USUARIO
	
	IF (@ID_TIPO_USUARIO IS NULL)
		SET @ID_TIPO_USUARIO = 1
		
	DECLARE @FECHA_HORA_LOCAL DATETIME
	SET @FECHA_HORA_LOCAL = DATEADD(HH,-5,GETUTCDATE())
	
	INSERT INTO TIPO_USUARIO (ID_TIPO_USUARIO, DESCRIPCION, ID_ESTADO, USUARIO_CREACION, FECHA_CREACION)
	VALUES (@ID_TIPO_USUARIO, @DESCRIPCION, @ID_ESTADO, @USUARIO_CREACION, @FECHA_HORA_LOCAL)
	
	SET @ID = @ID_TIPO_USUARIO
	
	SET NOCOUNT OFF

END
GO

ALTER PROCEDURE TI_SP_ACTUALIZAR_TIPO_USUARIO(
	@ID_TIPO_USUARIO INT,
	@DESCRIPCION VARCHAR(50),
	@ID_ESTADO INT, 
	@USUARIO_MODIFICACION VARCHAR(20)
)
AS
BEGIN

	SET NOCOUNT ON
	
	DECLARE @FECHA_HORA_LOCAL DATETIME
	SET @FECHA_HORA_LOCAL = DATEADD(HH,-5,GETUTCDATE())
	
	UPDATE
		TIPO_USUARIO
	SET
		DESCRIPCION = ISNULL(@DESCRIPCION, DESCRIPCION),
		ID_ESTADO = ISNULL(@ID_ESTADO, ID_ESTADO), 
		USUARIO_MODIFICACION = @USUARIO_MODIFICACION, 
		FECHA_MODIFICACION = @FECHA_HORA_LOCAL
	WHERE
		ID_TIPO_USUARIO = @ID_TIPO_USUARIO
	
	SET NOCOUNT OFF

END
GO

----------------------------TABLA USUARIO----------------------------
CREATE TABLE DBO.USUARIO(
	ID_USUARIO VARCHAR(20) PRIMARY KEY NOT NULL,
	CONTRASENA VARCHAR(200) NOT NULL,
	NOMBRE VARCHAR(200) NOT NULL,
	FECHA_CREACIÓN DATETIME,
	DIAS_SOLICITUD_CAMBIO INT,
	FECHA_ULTIMO_CAMBIO_CLAVE DATETIME,
	REQUIERE_CAMBIO_CLAVE VARCHAR(1),
	ID_ESTADO INT FOREIGN KEY REFERENCES ESTADO(ID_ESTADO),
	ID_TIPO_USUARIO INT FOREIGN KEY REFERENCES TIPO_USUARIO(ID_TIPO_USUARIO)
)
GO

ALTER TABLE USUARIO ADD EMAIL VARCHAR(50)
go

CREATE NONCLUSTERED INDEX USUARIO_CLAVE ON USUARIO(ID_USUARIO, CONTRASENA) WITH FILLFACTOR=80	
CREATE NONCLUSTERED INDEX USUARIO_BUSQUEDA ON USUARIO(ID_USUARIO, NOMBRE, ID_ESTADO, ID_TIPO_USUARIO) WITH FILLFACTOR=80
GO

INSERT INTO USUARIO VALUES('OALVAREZ','OALVAREZ','Omar Alvarez',GETDATE(), 30, GETDATE(),'0',1, 1)
INSERT INTO USUARIO VALUES('USUARIOPECSA','USUARIOPECSA','Usuario PECSA',GETDATE(), 30, GETDATE(),'0',1, 1)
INSERT INTO USUARIO VALUES('MODERADORTI','MODERADORTI','Moderador TI Consulting',GETDATE(), 30, GETDATE(),'0',1, 2)
INSERT INTO USUARIO VALUES('TECNICOTI','TECNICOTI','Técnico TI Consulting',GETDATE(), 30, GETDATE(),'0',1, 2)
INSERT INTO USUARIO VALUES('ADMINISTRADOR','ADMINISTRADOR','Administrador del Sistema',GETDATE(), 30, GETDATE(),'0',1, 4, 'oalvarez86@gmail.com')
GO

CREATE PROCEDURE TI_SP_VALIDAR_USUARIO(
	@ID_USUARIO VARCHAR(20),
	@CONTRASENA VARCHAR(200)
)
AS
BEGIN
	SET NOCOUNT ON
	
	SELECT 
		COUNT(ID_USUARIO) 
	FROM
		USUARIO
	WHERE
		ID_USUARIO = @ID_USUARIO
		AND CONTRASENA = @CONTRASENA
		
		SET NOCOUNT OFF
END
GO

ALTER PROCEDURE TI_SP_CONSULTAR_USUARIO(
	@ID_USUARIO VARCHAR(20),
	@NOMBRE VARCHAR(200),
	@ID_ESTADO INT, 
	@ID_TIPO_USUARIO INT
)
AS
BEGIN

	SET NOCOUNT ON
	
	IF (@NOMBRE IS NOT NULL)
		SET @NOMBRE = '%' + @NOMBRE + '%'
	
	SELECT
		U.ID_USUARIO, U.NOMBRE, U.FECHA_CREACIÓN, U.DIAS_SOLICITUD_CAMBIO, U.FECHA_ULTIMO_CAMBIO_CLAVE, U.REQUIERE_CAMBIO_CLAVE, U.ID_ESTADO, E.DESCRIPCION, 
		U.ID_TIPO_USUARIO, TU.DESCRIPCION, U.EMAIL, U.CONTRASENA
	FROM
		USUARIO U
		INNER JOIN TIPO_USUARIO TU ON U.ID_TIPO_USUARIO = TU.ID_TIPO_USUARIO
		INNER JOIN ESTADO E ON U.ID_ESTADO = E.ID_ESTADO
	WHERE
		(@ID_USUARIO IS NULL OR U.ID_USUARIO = @ID_USUARIO)
		AND (@NOMBRE IS NULL OR U.NOMBRE LIKE @NOMBRE)
		AND (@ID_ESTADO IS NULL OR U.ID_ESTADO = @ID_ESTADO)
		AND (@ID_TIPO_USUARIO IS NULL OR U.ID_TIPO_USUARIO = @ID_TIPO_USUARIO)
	ORDER BY
		ID_USUARIO
	
	SET NOCOUNT OFF

END
GO

ALTER PROCEDURE TI_SP_REGISTRAR_USUARIO(
	@ID_USUARIO VARCHAR(20),
	@CONTRASENA VARCHAR(200),
	@NOMBRE VARCHAR(200),
	@DIAS_SOLICITUD_CAMBIO INT,
	@REQUIERE_CAMBIO_CLAVE VARCHAR(1),
	@ID_ESTADO INT,
	@ID_TIPO_USUARIO INT,
	@EMAIL VARCHAR(50)
)
AS
BEGIN

	SET NOCOUNT ON
	
	DECLARE @FECHA_HORA_LOCAL DATETIME
	SET @FECHA_HORA_LOCAL = DATEADD(HH,-5,GETUTCDATE())
	
	INSERT INTO USUARIO (	ID_USUARIO, CONTRASENA, NOMBRE, FECHA_CREACIÓN, DIAS_SOLICITUD_CAMBIO, FECHA_ULTIMO_CAMBIO_CLAVE, REQUIERE_CAMBIO_CLAVE, 
	ID_ESTADO, ID_TIPO_USUARIO, EMAIL)
	VALUES (@ID_USUARIO, @CONTRASENA, @NOMBRE, @FECHA_HORA_LOCAL, @DIAS_SOLICITUD_CAMBIO, @FECHA_HORA_LOCAL, @REQUIERE_CAMBIO_CLAVE, @ID_ESTADO, @ID_TIPO_USUARIO, @EMAIL)
	
	SET NOCOUNT OFF
	
END
GO

ALTER PROCEDURE TI_SP_ACTUALIZAR_USUARIO(
	@ID_USUARIO VARCHAR(20),
	@CONTRASENA VARCHAR(200),
	@NOMBRE VARCHAR(200),
	@DIAS_SOLICITUD_CAMBIO INT,
	@REQUIERE_CAMBIO_CLAVE VARCHAR(1),
	@ID_ESTADO INT,
	@ID_TIPO_USUARIO INT,
	@EMAIL VARCHAR(50)
)
AS
BEGIN

	SET NOCOUNT ON
	
	DECLARE @FECHA_ULTIMO_CAMBIO_CLAVE DATETIME	
	
	IF (@CONTRASENA IS NOT NULL)
		SET @FECHA_ULTIMO_CAMBIO_CLAVE = GETDATE()
	
	UPDATE
		USUARIO
	SET
		CONTRASENA = ISNULL(@CONTRASENA, CONTRASENA),
		NOMBRE = ISNULL(@NOMBRE, NOMBRE), 
		DIAS_SOLICITUD_CAMBIO = ISNULL(@DIAS_SOLICITUD_CAMBIO, DIAS_SOLICITUD_CAMBIO),
		FECHA_ULTIMO_CAMBIO_CLAVE = ISNULL(@FECHA_ULTIMO_CAMBIO_CLAVE, FECHA_ULTIMO_CAMBIO_CLAVE),
		REQUIERE_CAMBIO_CLAVE = ISNULL(@REQUIERE_CAMBIO_CLAVE, REQUIERE_CAMBIO_CLAVE), 
		ID_ESTADO = ISNULL(@ID_ESTADO, ID_ESTADO),
		ID_TIPO_USUARIO = ISNULL(@ID_TIPO_USUARIO, ID_TIPO_USUARIO),
		EMAIL = ISNULL(@EMAIL, EMAIL)
	WHERE
		ID_USUARIO = @ID_USUARIO
	
	SET NOCOUNT OFF

END
GO

CREATE PROCEDURE TI_SP_CONSULTAR_TECNICOS_LIBRES(
	@NOMBRE VARCHAR(200)
)
AS
BEGIN

	SET NOCOUNT ON
	
	IF (@NOMBRE IS NOT NULL)
		SET @NOMBRE = '%' + RTRIM(@NOMBRE) + '%'
	
	SELECT 
		ID_USUARIO, NOMBRE
	FROM 
		USUARIO
	WHERE 
		ID_TIPO_USUARIO=3
		AND ID_ESTADO = 1
		AND ID_USUARIO NOT IN (
			SELECT 
				DISTINCT TR.ID_USUARIO_ASIGNADO
			FROM 
				TICKET T
				LEFT JOIN TICKET_REGISTRO TR ON T.NRO_TICKET = TR.NRO_TICKET AND TR.ID_ESTADO_TICKET=2
			WHERE 
				T.ID_ESTADO_TICKET IN (2,3,4,6)
		)	
		AND (@NOMBRE IS NULL OR NOMBRE LIKE @NOMBRE)
	ORDER BY
		ID_USUARIO
	
	
	SET NOCOUNT OFF

END
GO

----------------------------TABLA UBIGEO----------------------------
CREATE TABLE UBIGEO(
	ID_DEPARTAMENTO VARCHAR(5),
	ID_PROVINCIA VARCHAR(5),
	ID_DISTRITO VARCHAR(5),
	DESCRIPCION VARCHAR(100),
	USUARIO_CREACION VARCHAR(20) FOREIGN KEY REFERENCES USUARIO(ID_USUARIO),
	FECHA_CREACION DATETIME,
	PRIMARY KEY(ID_DEPARTAMENTO, ID_PROVINCIA, ID_DISTRITO)
)
GO

CREATE NONCLUSTERED INDEX UBIGEO_BUSQUEDA ON UBIGEO(ID_DEPARTAMENTO, ID_PROVINCIA, ID_DISTRITO) WITH FILLFACTOR=80
GO


--EXEC  TI_SP_CONSULTAR_UBIGEO '01', '01', NULL
CREATE PROCEDURE TI_SP_CONSULTAR_UBIGEO(
	@ID_DEPARTAMENTO VARCHAR(5),
	@ID_PROVINCIA VARCHAR(5),
	@ID_DISTRITO VARCHAR(5)
)
AS
BEGIN
	
	SET NOCOUNT ON
	
	SELECT
		ID_DEPARTAMENTO, ID_PROVINCIA, ID_DISTRITO, DESCRIPCION
	FROM
		UBIGEO
	WHERE
		(@ID_DEPARTAMENTO IS NULL OR ID_DEPARTAMENTO = @ID_DEPARTAMENTO)
		AND (@ID_PROVINCIA IS NULL OR ID_PROVINCIA = @ID_PROVINCIA)
		AND (@ID_DISTRITO IS NULL OR ID_DISTRITO = @ID_DISTRITO)
	ORDER BY
		ID_DEPARTAMENTO, ID_PROVINCIA, ID_DISTRITO
	
	SET NOCOUNT OFF
	
END
GO

----------------------------TABLA UNIDAD DE NEGOCIO----------------------------
CREATE TABLE DBO.UNIDAD_NEGOCIO(
	ID_UNIDAD_NEGOCIO INT PRIMARY KEY NOT NULL,
	DESCRIPCION VARCHAR(50),
	ID_ESTADO INT FOREIGN KEY REFERENCES ESTADO(ID_ESTADO), 
	FECHA_CREACION DATETIME,
	USUARIO_CREACION VARCHAR(20),
	FECHA_MODIFICACION DATETIME,
	USUARIO_MODIFICACION VARCHAR(20)	
)
GO

INSERT INTO UNIDAD_NEGOCIO (ID_UNIDAD_NEGOCIO, DESCRIPCION, ID_ESTADO, FECHA_CREACION, USUARIO_CREACION) VALUES (1, 'OFICINA', 1, GETDATE(), 'OALVAREZ')
INSERT INTO UNIDAD_NEGOCIO (ID_UNIDAD_NEGOCIO, DESCRIPCION, ID_ESTADO, FECHA_CREACION, USUARIO_CREACION) VALUES (2, 'ESTACIÓN DE SERVICIO', 1, GETDATE(), 'OALVAREZ')
INSERT INTO UNIDAD_NEGOCIO (ID_UNIDAD_NEGOCIO, DESCRIPCION, ID_ESTADO, FECHA_CREACION, USUARIO_CREACION) VALUES (3, 'MARKET', 1, GETDATE(), 'OALVAREZ')
GO

CREATE PROCEDURE TI_SP_CONSULTAR_UNIDAD_NEGOCIO(
	@ID_UNIDAD_NEGOCIO INT, 
	@DESCRIPCION VARCHAR(50),
	@ID_ESTADO INT
)
AS
BEGIN

	SET NOCOUNT ON
	
	IF (@DESCRIPCION IS NOT NULL)
		SET @DESCRIPCION = '%' + RTRIM(@DESCRIPCION) + '%'
	
	SELECT 
		UN.ID_UNIDAD_NEGOCIO, UN.DESCRIPCION, UN.ID_ESTADO, E.DESCRIPCION
	FROM 
		UNIDAD_NEGOCIO UN
		INNER JOIN ESTADO E ON UN.ID_ESTADO = E.ID_ESTADO
	WHERE
		(@ID_UNIDAD_NEGOCIO IS NULL OR UN.ID_UNIDAD_NEGOCIO = @ID_UNIDAD_NEGOCIO)
		AND (@DESCRIPCION IS NULL OR UN.DESCRIPCION LIKE @DESCRIPCION)
		AND (@ID_ESTADO IS NULL OR UN.ID_ESTADO = @ID_ESTADO)
	ORDER BY
		UN.ID_UNIDAD_NEGOCIO
	
	SET NOCOUNT OFF

END
GO

ALTER PROCEDURE TI_SP_REGISTRAR_UNIDAD_NEGOCIO(
	@DESCRIPCION VARCHAR(50),
	@ID_ESTADO INT,
	@USUARIO_CREACION VARCHAR(20), 
	@ID INT OUTPUT
)
AS
BEGIN

	SET NOCOUNT ON
	
	DECLARE @FECHA_HORA_LOCAL DATETIME
	SET @FECHA_HORA_LOCAL = DATEADD(HH,-5,GETUTCDATE())
	
	DECLARE 	@ID_UNIDAD_NEGOCIO INT
	SELECT @ID_UNIDAD_NEGOCIO = MAX(ID_UNIDAD_NEGOCIO) + 1 FROM UNIDAD_NEGOCIO
	
	IF (@ID_UNIDAD_NEGOCIO IS NULL)
		SET @ID_UNIDAD_NEGOCIO = 1
	
	INSERT INTO UNIDAD_NEGOCIO (ID_UNIDAD_NEGOCIO, DESCRIPCION, ID_ESTADO, FECHA_CREACION, USUARIO_CREACION) 
	VALUES (@ID_UNIDAD_NEGOCIO, @DESCRIPCION, @ID_ESTADO, @FECHA_HORA_LOCAL, @USUARIO_CREACION)
	
	SET @ID = @ID_UNIDAD_NEGOCIO
	
	SET NOCOUNT OFF

END
GO

ALTER PROCEDURE TI_SP_ACTUALIZAR_UNIDAD_NEGOCIO(
	@ID_UNIDAD_NEGOCIO INT,
	@DESCRIPCION VARCHAR(50),
	@ID_ESTADO INT,
	@USUARIO_MODIFICACION VARCHAR(20)
)
AS
BEGIN

	SET NOCOUNT ON
	
	DECLARE @FECHA_HORA_LOCAL DATETIME
	SET @FECHA_HORA_LOCAL = DATEADD(HH,-5,GETUTCDATE())
	
	UPDATE
		UNIDAD_NEGOCIO
	SET
		DESCRIPCION = ISNULL(@DESCRIPCION, DESCRIPCION),
		ID_ESTADO = ISNULL(@ID_ESTADO, ID_ESTADO),
		FECHA_MODIFICACION = @FECHA_HORA_LOCAL,
		USUARIO_MODIFICACION = @USUARIO_MODIFICACION
	WHERE
		ID_UNIDAD_NEGOCIO = @ID_UNIDAD_NEGOCIO
	
	SET NOCOUNT OFF

END
GO

----------------------------TABLA CLIENTE----------------------------
CREATE TABLE CLIENTE
(
	ID_CLIENTE INT PRIMARY KEY NOT NULL,
	RAZON_SOCIAL VARCHAR(100),
	NRO_DI VARCHAR(20),
	DIRECCION VARCHAR(100),
	ID_DEPARTAMENTO VARCHAR(5),
	ID_PROVINCIA VARCHAR(5),
	ID_DISTRITO VARCHAR(5),	
	TELEFONO VARCHAR(50),
	EMAIL VARCHAR(50),
	NOMBRE_CONTACTO VARCHAR(100),
	CARGO_CONTACTO VARCHAR(100),
	ID_ESTADO INT FOREIGN KEY REFERENCES ESTADO(ID_ESTADO), 
	FECHA_CREACION DATETIME,
	USUARIO_CREACION VARCHAR(20),
	FECHA_MODIFICACION DATETIME,
	USUARIO_MODIFICACION VARCHAR(20)		
)
GO

ALTER TABLE CLIENTE ADD ID_MONEDA VARCHAR(5) FOREIGN KEY REFERENCES MONEDA(ID_MONEDA),
TARIFA_DIURNA DECIMAL(8,4), TARIFA_NOCTURNA DECIMAL(8, 4)
GO

--UPDATE CLIENTE SET ID_MONEDA='$', TARIFA_DIURNA=20, TARIFA_NOCTURNA=25

ALTER PROCEDURE TI_SP_CONSULTAR_CLIENTE(
	@ID_CLIENTE INT,
	@RAZON_SOCIAL VARCHAR(100),
	@NRO_DI VARCHAR(20),
	@ID_DEPARTAMENTO VARCHAR(5),
	@ID_PROVINCIA VARCHAR(5),
	@ID_DISTRITO VARCHAR(5),	
	@ID_ESTADO INT
)
AS
BEGIN

	SET NOCOUNT ON
	
	IF (@RAZON_SOCIAL IS NOT NULL)
		SET @RAZON_SOCIAL = '%' + RTRIM(@RAZON_SOCIAL) + '%'
	
	IF (@NRO_DI IS NOT NULL)
		SET @NRO_DI = '%' + RTRIM(@NRO_DI) + '%'
		
	SELECT
		C.ID_CLIENTE, C.RAZON_SOCIAL, C.NRO_DI, C.DIRECCION, C.ID_DEPARTAMENTO, DEP.DESCRIPCION, C.ID_PROVINCIA, PROV.DESCRIPCION, C.ID_DISTRITO, DIST.DESCRIPCION, 
		C.TELEFONO, C.EMAIL, C.NOMBRE_CONTACTO, C.CARGO_CONTACTO, C.ID_ESTADO, E.DESCRIPCION, C.ID_MONEDA, M.DESCRIPCION, C.TARIFA_DIURNA, C.TARIFA_NOCTURNA
	FROM
		CLIENTE C
		INNER JOIN UBIGEO DEP ON DEP.ID_DEPARTAMENTO = C.ID_DEPARTAMENTO AND DEP.ID_PROVINCIA = '00' AND DEP.ID_DISTRITO = '00'
		INNER JOIN UBIGEO PROV ON PROV.ID_DEPARTAMENTO = C.ID_DEPARTAMENTO AND PROV.ID_PROVINCIA = C.ID_PROVINCIA AND PROV.ID_DISTRITO = '00'
		INNER JOIN UBIGEO DIST ON DIST.ID_DEPARTAMENTO = C.ID_DEPARTAMENTO AND DIST.ID_PROVINCIA = C.ID_PROVINCIA AND DIST.ID_DISTRITO = C.ID_DISTRITO
		INNER JOIN ESTADO E ON C.ID_ESTADO = E.ID_ESTADO
		INNER JOIN MONEDA M ON C.ID_MONEDA = M.ID_MONEDA
	WHERE
		(@ID_CLIENTE IS NULL OR C.ID_CLIENTE = @ID_CLIENTE)
		AND (@RAZON_SOCIAL IS NULL OR C.RAZON_SOCIAL LIKE @RAZON_SOCIAL)
		AND (@NRO_DI IS NULL OR C.NRO_DI LIKE @NRO_DI)
		AND (@ID_DEPARTAMENTO IS NULL OR C.ID_DEPARTAMENTO = @ID_DEPARTAMENTO)
		AND (@ID_PROVINCIA IS NULL OR C.ID_PROVINCIA = @ID_PROVINCIA)
		AND (@ID_DISTRITO IS NULL OR C.ID_DISTRITO = @ID_DISTRITO)
		AND (@ID_ESTADO IS NULL OR C.ID_ESTADO = @ID_ESTADO)
	ORDER BY
		C.ID_CLIENTE
		
	SET NOCOUNT OFF

END
GO

ALTER PROCEDURE TI_SP_REGISTRAR_CLIENTE(
	@RAZON_SOCIAL VARCHAR(100),
	@NRO_DI VARCHAR(20),
	@DIRECCION VARCHAR(100),
	@ID_DEPARTAMENTO VARCHAR(5),
	@ID_PROVINCIA VARCHAR(5),
	@ID_DISTRITO VARCHAR(5),	
	@TELEFONO VARCHAR(50),
	@EMAIL VARCHAR(50),
	@NOMBRE_CONTACTO VARCHAR(100),
	@CARGO_CONTACTO VARCHAR(100),
	@ID_ESTADO INT, 
	@USUARIO_CREACION VARCHAR(20), 
	@ID INT OUTPUT,
	@ID_MONEDA VARCHAR(5),
	@TARIFA_DIURNA DECIMAL(8,4), 
	@TARIFA_NOCTURNA DECIMAL(8,4)
)
AS
BEGIN
	
	SET NOCOUNT ON

	DECLARE @ID_CLIENTE INT 
	SELECT @ID_CLIENTE = MAX(ID_CLIENTE) + 1 FROM CLIENTE
	
	DECLARE @FECHA_HORA_LOCAL DATETIME
	SET @FECHA_HORA_LOCAL = DATEADD(HH,-5,GETUTCDATE())
	
	IF (@ID_CLIENTE IS NULL)
		SET @ID_CLIENTE = 1
		
	INSERT INTO CLIENTE (ID_CLIENTE, RAZON_SOCIAL, NRO_DI, DIRECCION, ID_DEPARTAMENTO, ID_PROVINCIA, ID_DISTRITO, TELEFONO, EMAIL, NOMBRE_CONTACTO, CARGO_CONTACTO, ID_ESTADO, 
	USUARIO_CREACION, FECHA_CREACION, ID_MONEDA, TARIFA_DIURNA, TARIFA_NOCTURNA)
	VALUES (@ID_CLIENTE, @RAZON_SOCIAL, @NRO_DI, @DIRECCION, @ID_DEPARTAMENTO, @ID_PROVINCIA, @ID_DISTRITO, @TELEFONO, @EMAIL, @NOMBRE_CONTACTO, @CARGO_CONTACTO, 
	@ID_ESTADO, @USUARIO_CREACION, @FECHA_HORA_LOCAL, @ID_MONEDA, @TARIFA_DIURNA, @TARIFA_NOCTURNA)
	
	SET @ID = @ID_CLIENTE

	SET NOCOUNT OFF
END
GO

ALTER PROCEDURE TI_SP_ACTUALIZAR_CLIENTE(
	@ID_CLIENTE INT,
	@RAZON_SOCIAL VARCHAR(100),
	@NRO_DI VARCHAR(20),
	@DIRECCION VARCHAR(100),
	@ID_DEPARTAMENTO VARCHAR(5),
	@ID_PROVINCIA VARCHAR(5),
	@ID_DISTRITO VARCHAR(5),	
	@TELEFONO VARCHAR(50),
	@EMAIL VARCHAR(50),
	@NOMBRE_CONTACTO VARCHAR(100),
	@CARGO_CONTACTO VARCHAR(100),
	@ID_ESTADO INT, 
	@USUARIO_MODIFICACION VARCHAR(20),
	@ID_MONEDA VARCHAR(5),
	@TARIFA_DIURNA DECIMAL(8,4), 
	@TARIFA_NOCTURNA DECIMAL(8,4)	
)
AS
BEGIN
	
	SET NOCOUNT ON
	
	DECLARE @FECHA_HORA_LOCAL DATETIME
	SET @FECHA_HORA_LOCAL = DATEADD(HH,-5,GETUTCDATE())

	UPDATE
		CLIENTE
	SET
		RAZON_SOCIAL = ISNULL(@RAZON_SOCIAL, RAZON_SOCIAL), 
		NRO_DI = ISNULL(@NRO_DI, NRO_DI), 
		DIRECCION = ISNULL(@DIRECCION, DIRECCION),
		ID_DEPARTAMENTO = ISNULL(@ID_DEPARTAMENTO, ID_DEPARTAMENTO), 
		ID_PROVINCIA = ISNULL(@ID_PROVINCIA, ID_PROVINCIA),
		ID_DISTRITO = ISNULL(@ID_DISTRITO, ID_DISTRITO),
		TELEFONO = ISNULL(@TELEFONO, TELEFONO),
		EMAIL = ISNULL(@EMAIL, EMAIL), 
		NOMBRE_CONTACTO = ISNULL(@NOMBRE_CONTACTO, NOMBRE_CONTACTO),
		CARGO_CONTACTO = ISNULL(@CARGO_CONTACTO, CARGO_CONTACTO), 
		ID_ESTADO = ISNULL(@ID_ESTADO, ID_ESTADO),
		USUARIO_MODIFICACION = @USUARIO_MODIFICACION, 
		FECHA_MODIFICACION = @FECHA_HORA_LOCAL, 
		ID_MONEDA = ISNULL(@ID_MONEDA, ID_MONEDA),
		TARIFA_DIURNA = ISNULL(@TARIFA_DIURNA, TARIFA_DIURNA),
		TARIFA_NOCTURNA = ISNULL(@TARIFA_NOCTURNA, TARIFA_NOCTURNA)		
	WHERE
		ID_CLIENTE = @ID_CLIENTE

	SET NOCOUNT OFF
END
GO

----------------------------TABLA SEDE_CLIENTE----------------------------
CREATE TABLE SEDE_CLIENTE(
	ID_SEDE INT PRIMARY KEY NOT NULL,
	NOMBRE VARCHAR(50),
	ID_CLIENTE INT FOREIGN KEY REFERENCES CLIENTE(ID_CLIENTE),
	ID_UNIDAD_NEGOCIO INT FOREIGN KEY REFERENCES UNIDAD_NEGOCIO(ID_UNIDAD_NEGOCIO), 
	DIRECCION VARCHAR(100),
	ID_DEPARTAMENTO VARCHAR(5),
	ID_PROVINCIA VARCHAR(5),
	ID_DISTRITO VARCHAR(5),	
	TELEFONO VARCHAR(50),
	NOMBRE_CONTACTO VARCHAR(100),
	CARGO_CONTACTO VARCHAR(100),
	ID_ESTADO INT FOREIGN KEY REFERENCES ESTADO(ID_ESTADO), 
	CENTRO_COSTO VARCHAR(20),
	FECHA_CREACION DATETIME,
	USUARIO_CREACION VARCHAR(20),
	FECHA_MODIFICACION DATETIME,
	USUARIO_MODIFICACION VARCHAR(20)				
)
GO

--EXEC TI_SP_CONSULTAR_SEDE_CLIENTE NULL, NULL, 1, NULL, NULL, NULL, NULL, NULL

ALTER PROCEDURE TI_SP_CONSULTAR_SEDE_CLIENTE(
	@ID_SEDE INT,
	@NOMBRE VARCHAR(50),
	@ID_CLIENTE INT, 
	@ID_UNIDAD_NEGOCIO INT, 
	@ID_DEPARTAMENTO VARCHAR(5),
	@ID_PROVINCIA VARCHAR(5),
	@ID_DISTRITO VARCHAR(5), 
	@ID_ESTADO INT
)
AS
BEGIN

	SET NOCOUNT ON
	
	SELECT
		SC.ID_SEDE, SC.NOMBRE, SC.ID_CLIENTE, C.RAZON_SOCIAL, C.NRO_DI, SC.ID_UNIDAD_NEGOCIO, UN.DESCRIPCION, SC.ID_DEPARTAMENTO, DEP.DESCRIPCION, SC.ID_PROVINCIA, 
		PROV.DESCRIPCION, SC.ID_DISTRITO, DIST.DESCRIPCION, SC.TELEFONO, SC.NOMBRE_CONTACTO, SC.CARGO_CONTACTO, SC.ID_ESTADO, E.DESCRIPCION, SC.CENTRO_COSTO, SC.DIRECCION
	FROM
		SEDE_CLIENTE SC
		INNER JOIN CLIENTE C ON C.ID_CLIENTE = SC.ID_CLIENTE
		INNER JOIN UNIDAD_NEGOCIO UN ON UN.ID_UNIDAD_NEGOCIO = SC.ID_UNIDAD_NEGOCIO
		INNER JOIN UBIGEO DEP ON DEP.ID_DEPARTAMENTO = SC.ID_DEPARTAMENTO AND DEP.ID_PROVINCIA = '00' AND DEP.ID_DISTRITO = '00'
		INNER JOIN UBIGEO PROV ON PROV.ID_DEPARTAMENTO = SC.ID_DEPARTAMENTO AND PROV.ID_PROVINCIA = SC.ID_PROVINCIA AND PROV.ID_DISTRITO = '00'
		INNER JOIN UBIGEO DIST ON DIST.ID_DEPARTAMENTO = SC.ID_DEPARTAMENTO AND DIST.ID_PROVINCIA = SC.ID_PROVINCIA AND DIST.ID_DISTRITO = SC.ID_DISTRITO
		INNER JOIN ESTADO E ON SC.ID_ESTADO = E.ID_ESTADO
	WHERE
		(@ID_SEDE IS NULL OR SC.ID_SEDE = @ID_SEDE)
		AND (@NOMBRE IS NULL OR SC.NOMBRE = @NOMBRE)
		AND (@ID_CLIENTE IS NULL OR SC.ID_CLIENTE = @ID_CLIENTE)
		AND (@ID_UNIDAD_NEGOCIO IS NULL OR SC.ID_UNIDAD_NEGOCIO = @ID_UNIDAD_NEGOCIO)
		AND (@ID_DEPARTAMENTO IS NULL OR SC.ID_DEPARTAMENTO = @ID_DEPARTAMENTO)
		AND (@ID_PROVINCIA IS NULL OR SC.ID_PROVINCIA = @ID_PROVINCIA)
		AND (@ID_DISTRITO IS NULL OR SC.ID_DISTRITO = @ID_DISTRITO)
		AND (@ID_ESTADO IS NULL OR SC.ID_ESTADO = @ID_ESTADO)
	ORDER BY
		SC.ID_CLIENTE, SC.ID_SEDE
	
	SET NOCOUNT OFF

END
GO

ALTER PROCEDURE TI_SP_REGISTRAR_SEDE_CLIENTE(
	@NOMBRE VARCHAR(50),
	@ID_CLIENTE INT,
	@ID_UNIDAD_NEGOCIO INT,
	@DIRECCION VARCHAR(100),
	@ID_DEPARTAMENTO VARCHAR(5),
	@ID_PROVINCIA VARCHAR(5),
	@ID_DISTRITO VARCHAR(5),	
	@TELEFONO VARCHAR(50),
	@NOMBRE_CONTACTO VARCHAR(100),
	@CARGO_CONTACTO VARCHAR(100),
	@ID_ESTADO INT,
	@CENTRO_COSTO VARCHAR(20),
	@USUARIO_CREACION VARCHAR(20),
	@ID INT OUTPUT
)
AS
BEGIN

	SET NOCOUNT ON
	
	DECLARE @FECHA_HORA_LOCAL DATETIME
	SET @FECHA_HORA_LOCAL = DATEADD(HH,-5,GETUTCDATE())	
	
	DECLARE @ID_SEDE INT
	SELECT @ID_SEDE = MAX(ID_SEDE) + 1 FROM SEDE_CLIENTE
	
	IF (@ID_SEDE IS NULL)
		SET @ID_SEDE = 1
		
	INSERT INTO SEDE_CLIENTE ( ID_SEDE, NOMBRE, ID_CLIENTE, ID_UNIDAD_NEGOCIO, DIRECCION, ID_DEPARTAMENTO, ID_PROVINCIA, ID_DISTRITO, TELEFONO, NOMBRE_CONTACTO, CARGO_CONTACTO, 
	ID_ESTADO, CENTRO_COSTO, FECHA_CREACION, USUARIO_CREACION)
	VALUES (@ID_SEDE, @NOMBRE, @ID_CLIENTE, @ID_UNIDAD_NEGOCIO, @DIRECCION, @ID_DEPARTAMENTO, @ID_PROVINCIA, @ID_DISTRITO, @TELEFONO, @NOMBRE_CONTACTO, @CARGO_CONTACTO, 
	@ID_ESTADO, @CENTRO_COSTO, @FECHA_HORA_LOCAL, @USUARIO_CREACION)
	
	SET @ID = @ID_SEDE
	
	SET NOCOUNT OFF

END
GO

ALTER PROCEDURE TI_SP_ACTUALIZAR_SEDE_CLIENTE(
	@ID_SEDE INT,
	@NOMBRE VARCHAR(50),
	@ID_CLIENTE INT,
	@ID_UNIDAD_NEGOCIO INT,
	@DIRECCION VARCHAR(100),
	@ID_DEPARTAMENTO VARCHAR(5),
	@ID_PROVINCIA VARCHAR(5),
	@ID_DISTRITO VARCHAR(5),	
	@TELEFONO VARCHAR(50),
	@NOMBRE_CONTACTO VARCHAR(100),
	@CARGO_CONTACTO VARCHAR(100),
	@ID_ESTADO INT,
	@CENTRO_COSTO VARCHAR(20),
	@USUARIO_MODIFICACION VARCHAR(20)
)
AS
BEGIN

	SET NOCOUNT ON
	
	DECLARE @FECHA_HORA_LOCAL DATETIME
	SET @FECHA_HORA_LOCAL = DATEADD(HH,-5,GETUTCDATE())	
	
	UPDATE 
		SEDE_CLIENTE 
	SET
		NOMBRE = ISNULL(@NOMBRE, NOMBRE), 
		ID_UNIDAD_NEGOCIO = ISNULL(@ID_UNIDAD_NEGOCIO, ID_UNIDAD_NEGOCIO), 
		DIRECCION = ISNULL(@DIRECCION, DIRECCION), 
		ID_DEPARTAMENTO = ISNULL(@ID_DEPARTAMENTO, ID_DEPARTAMENTO), 
		ID_PROVINCIA = ISNULL(@ID_PROVINCIA, ID_PROVINCIA), 
		ID_DISTRITO = ISNULL(@ID_DISTRITO, ID_DISTRITO), 
		TELEFONO = ISNULL(@TELEFONO, TELEFONO), 
		NOMBRE_CONTACTO = ISNULL(@NOMBRE_CONTACTO, NOMBRE_CONTACTO), 
		CARGO_CONTACTO = ISNULL(@CARGO_CONTACTO, CARGO_CONTACTO), 
		ID_ESTADO = ISNULL(@ID_ESTADO, ID_ESTADO), 
		CENTRO_COSTO = ISNULL(@CENTRO_COSTO, CENTRO_COSTO), 
		FECHA_MODIFICACION = @FECHA_HORA_LOCAL, 
		USUARIO_MODIFICACION = @USUARIO_MODIFICACION
	WHERE 
		ID_SEDE = @ID_SEDE
		AND ID_CLIENTE = @ID_CLIENTE
	
	SET NOCOUNT OFF

END
GO


----------------------------TABLA CATEGORIA----------------------------
CREATE TABLE CATEGORIA_PROBLEMA(
	ID_CATEGORIA_PROBLEMA INT PRIMARY KEY NOT NULL, 
	DESCRIPCION VARCHAR(50),
	ID_ESTADO INT FOREIGN KEY REFERENCES ESTADO(ID_ESTADO), 
	FECHA_CREACION DATETIME,
	USUARIO_CREACION VARCHAR(20),
	FECHA_MODIFICACION DATETIME,
	USUARIO_MODIFICACION VARCHAR(20)		
)
GO

INSERT INTO CATEGORIA_PROBLEMA (ID_CATEGORIA_PROBLEMA, DESCRIPCION, ID_ESTADO, FECHA_CREACION, USUARIO_CREACION) VALUES (1, 'ERROR DE HARDWARE', 1, GETDATE(), 'OALVAREZ')
INSERT INTO CATEGORIA_PROBLEMA (ID_CATEGORIA_PROBLEMA, DESCRIPCION, ID_ESTADO, FECHA_CREACION, USUARIO_CREACION) VALUES (2, 'ERROR DE SOFTWARE', 1, GETDATE(), 'OALVAREZ')
INSERT INTO CATEGORIA_PROBLEMA (ID_CATEGORIA_PROBLEMA, DESCRIPCION, ID_ESTADO, FECHA_CREACION, USUARIO_CREACION) VALUES (3, 'INSTALACIÓN', 1, GETDATE(), 'OALVAREZ')
INSERT INTO CATEGORIA_PROBLEMA (ID_CATEGORIA_PROBLEMA, DESCRIPCION, ID_ESTADO, FECHA_CREACION, USUARIO_CREACION) VALUES (4, 'REVISIÓN DE EQUIPOS', 1, GETDATE(), 'OALVAREZ')
GO

CREATE PROCEDURE TI_SP_CONSULTAR_CATEGORIA_PROBLEMA(
	@ID_CATEGORIA_PROBLEMA INT, 
	@DESCRIPCION VARCHAR(50), 
	@ID_ESTADO INT
)
AS
BEGIN

	SET NOCOUNT ON
	
	IF (@DESCRIPCION IS NOT NULL)
		SET @DESCRIPCION = '%' + RTRIM(@DESCRIPCION) + '%'
	
	SELECT 
		CP.ID_CATEGORIA_PROBLEMA, CP.DESCRIPCION, CP.ID_ESTADO, E.DESCRIPCION
	FROM 
		CATEGORIA_PROBLEMA CP
		INNER JOIN ESTADO E ON CP.ID_ESTADO = E.ID_ESTADO
	WHERE
		(@ID_CATEGORIA_PROBLEMA IS NULL OR CP.ID_CATEGORIA_PROBLEMA = @ID_CATEGORIA_PROBLEMA)
		AND (@DESCRIPCION IS NULL OR CP.DESCRIPCION LIKE @DESCRIPCION)
		AND (@ID_ESTADO IS NULL OR CP.ID_ESTADO = @ID_ESTADO)
	ORDER BY
		CP.ID_CATEGORIA_PROBLEMA
	
	SET NOCOUNT OFF

END
GO

ALTER PROCEDURE TI_SP_REGISTRAR_CATEGORIA_PROBLEMA(
	@DESCRIPCION VARCHAR(50),
	@ID_ESTADO INT, 
	@USUARIO_CREACION VARCHAR(20), 
	@ID INT OUTPUT
)
AS
BEGIN

	SET NOCOUNT ON
	
	DECLARE @FECHA_HORA_LOCAL DATETIME
	SET @FECHA_HORA_LOCAL = DATEADD(HH,-5,GETUTCDATE())	
	
	DECLARE @ID_CATEGORIA_PROBLEMA INT 
	SELECT @ID_CATEGORIA_PROBLEMA = MAX(ID_CATEGORIA_PROBLEMA) + 1 FROM CATEGORIA_PROBLEMA
	
	IF (@ID_CATEGORIA_PROBLEMA IS NULL)
		SET @ID_CATEGORIA_PROBLEMA = 1
		
	INSERT INTO CATEGORIA_PROBLEMA (ID_CATEGORIA_PROBLEMA, DESCRIPCION, ID_ESTADO, FECHA_CREACION, USUARIO_CREACION) 
	VALUES (@ID_CATEGORIA_PROBLEMA, @DESCRIPCION, @ID_ESTADO, @FECHA_HORA_LOCAL, @USUARIO_CREACION)

	SET @ID = @ID_CATEGORIA_PROBLEMA
	
	SET NOCOUNT OFF

END
GO

ALTER PROCEDURE TI_SP_ACTUALIZAR_CATEGORIA_PROBLEMA(
	@ID_CATEGORIA_PROBLEMA INT,
	@DESCRIPCION VARCHAR(50),
	@ID_ESTADO INT, 
	@USUARIO_MODIFICACION VARCHAR(20)
)
AS
BEGIN

	SET NOCOUNT ON
	
	DECLARE @FECHA_HORA_LOCAL DATETIME
	SET @FECHA_HORA_LOCAL = DATEADD(HH,-5,GETUTCDATE())	
	
	UPDATE
		CATEGORIA_PROBLEMA
	SET
		DESCRIPCION = ISNULL(@DESCRIPCION, DESCRIPCION), 
		ID_ESTADO = ISNULL(@ID_ESTADO, ID_ESTADO),
		USUARIO_MODIFICACION = @USUARIO_MODIFICACION, 
		FECHA_MODIFICACION = @FECHA_HORA_LOCAL
	WHERE
		ID_CATEGORIA_PROBLEMA = @ID_CATEGORIA_PROBLEMA
	
	SET NOCOUNT OFF

END
GO

----------------------------TABLA NIVEL_URGENCIA----------------------------
CREATE TABLE NIVEL_URGENCIA(
	ID_NIVEL_URGENCIA INT PRIMARY KEY NOT NULL, 
	DESCRIPCION VARCHAR(50),
	ID_ESTADO INT FOREIGN KEY REFERENCES ESTADO(ID_ESTADO), 
	FECHA_CREACION DATETIME,
	USUARIO_CREACION VARCHAR(20),
	FECHA_MODIFICACION DATETIME,
	USUARIO_MODIFICACION VARCHAR(20)		
)
GO

INSERT INTO NIVEL_URGENCIA (ID_NIVEL_URGENCIA, DESCRIPCION, ID_ESTADO, FECHA_CREACION, USUARIO_CREACION) VALUES (1, 'BAJO', 1, GETDATE(), 'OALVAREZ')
INSERT INTO NIVEL_URGENCIA (ID_NIVEL_URGENCIA, DESCRIPCION, ID_ESTADO, FECHA_CREACION, USUARIO_CREACION) VALUES (2, 'MEDIO - BAJO', 1, GETDATE(), 'OALVAREZ')
INSERT INTO NIVEL_URGENCIA (ID_NIVEL_URGENCIA, DESCRIPCION, ID_ESTADO, FECHA_CREACION, USUARIO_CREACION) VALUES (3, 'MEDIO', 1, GETDATE(), 'OALVAREZ')
INSERT INTO NIVEL_URGENCIA (ID_NIVEL_URGENCIA, DESCRIPCION, ID_ESTADO, FECHA_CREACION, USUARIO_CREACION) VALUES (4, 'MEDIO - ALTO', 1, GETDATE(), 'OALVAREZ')
INSERT INTO NIVEL_URGENCIA (ID_NIVEL_URGENCIA, DESCRIPCION, ID_ESTADO, FECHA_CREACION, USUARIO_CREACION) VALUES (5, 'ALTO', 1, GETDATE(), 'OALVAREZ')
GO

CREATE PROCEDURE TI_SP_CONSULTAR_NIVEL_URGENCIA(
	@ID_NIVEL_URGENCIA INT, 
	@DESCRIPCION VARCHAR(50), 
	@ID_ESTADO INT
)
AS
BEGIN

	SET NOCOUNT ON
	
	IF (@DESCRIPCION IS NOT NULL)
		SET @DESCRIPCION = '%' + RTRIM(@DESCRIPCION) + '%'
	
	SELECT 
		NU.ID_NIVEL_URGENCIA, NU.DESCRIPCION, NU.ID_ESTADO, E.DESCRIPCION
	FROM 
		NIVEL_URGENCIA NU
		INNER JOIN ESTADO E ON NU.ID_ESTADO = E.ID_ESTADO
	WHERE
		(@ID_NIVEL_URGENCIA IS NULL OR NU.ID_NIVEL_URGENCIA = @ID_NIVEL_URGENCIA)
		AND (@DESCRIPCION IS NULL OR NU.DESCRIPCION LIKE @DESCRIPCION)
		AND (@ID_ESTADO IS NULL OR NU.ID_ESTADO = @ID_ESTADO)
	ORDER BY
		NU.ID_NIVEL_URGENCIA
	
	SET NOCOUNT OFF

END
GO

ALTER PROCEDURE TI_SP_REGISTRAR_NIVEL_URGENCIA(
	@DESCRIPCION VARCHAR(50),
	@ID_ESTADO INT, 
	@USUARIO_CREACION VARCHAR(20), 
	@ID INT OUTPUT
)
AS
BEGIN

	SET NOCOUNT ON
	
	DECLARE @FECHA_HORA_LOCAL DATETIME
	SET @FECHA_HORA_LOCAL = DATEADD(HH,-5,GETUTCDATE())
		
	DECLARE @ID_NIVEL_URGENCIA INT 
	SELECT @ID_NIVEL_URGENCIA = MAX(ID_NIVEL_URGENCIA) + 1 FROM NIVEL_URGENCIA
	
	IF (@ID_NIVEL_URGENCIA IS NULL)
		SET @ID_NIVEL_URGENCIA = 1
		
	INSERT INTO NIVEL_URGENCIA (ID_NIVEL_URGENCIA, DESCRIPCION, ID_ESTADO, FECHA_CREACION, USUARIO_CREACION) 
	VALUES (@ID_NIVEL_URGENCIA, @DESCRIPCION, @ID_ESTADO, @FECHA_HORA_LOCAL, @USUARIO_CREACION)

	SET @ID = @ID_NIVEL_URGENCIA
	
	SET NOCOUNT OFF

END
GO

ALTER PROCEDURE TI_SP_ACTUALIZAR_NIVEL_URGENCIA(
	@ID_NIVEL_URGENCIA INT,
	@DESCRIPCION VARCHAR(50),
	@ID_ESTADO INT, 
	@USUARIO_MODIFICACION VARCHAR(20)
)
AS
BEGIN

	SET NOCOUNT ON
	
	DECLARE @FECHA_HORA_LOCAL DATETIME
	SET @FECHA_HORA_LOCAL = DATEADD(HH,-5,GETUTCDATE())	
	
	UPDATE
		NIVEL_URGENCIA
	SET
		DESCRIPCION = ISNULL(@DESCRIPCION, DESCRIPCION), 
		ID_ESTADO = ISNULL(@ID_ESTADO, ID_ESTADO),
		USUARIO_MODIFICACION = @USUARIO_MODIFICACION, 
		FECHA_MODIFICACION = @FECHA_HORA_LOCAL
	WHERE
		ID_NIVEL_URGENCIA = @ID_NIVEL_URGENCIA
	
	SET NOCOUNT OFF

END
GO

----------------------------TABLA USUARIO_CLIENTE----------------------------
CREATE TABLE USUARIO_CLIENTE(
	ID_USUARIO VARCHAR(20) FOREIGN KEY REFERENCES USUARIO(ID_USUARIO),
	ID_CLIENTE INT FOREIGN KEY REFERENCES CLIENTE(ID_CLIENTE),
	ID_ESTADO INT FOREIGN KEY REFERENCES ESTADO(ID_ESTADO),
	FECHA_CREACION DATETIME,
	USUARIO_CREACION VARCHAR(20),
	FECHA_MODIFICACION DATETIME,
	USUARIO_MODIFICACION VARCHAR(20)		
)
GO

ALTER PROCEDURE TI_SP_CONSULTAR_USUARIO_CLIENTE(
	@ID_USUARIO VARCHAR(20), 
	@ID_CLIENTE INT, 
	@ID_ESTADO INT
)
AS
BEGIN

	SET NOCOUNT ON
	
	SELECT
		UC.ID_USUARIO, U.NOMBRE, UC.ID_CLIENTE, C.RAZON_SOCIAL, UC.ID_ESTADO, E.DESCRIPCION, U.ID_ESTADO, E1.DESCRIPCION, C.ID_ESTADO, E2.DESCRIPCION, U.ID_TIPO_USUARIO, TU.DESCRIPCION
	FROM
		USUARIO_CLIENTE UC
		INNER JOIN USUARIO U ON UC.ID_USUARIO = U.ID_USUARIO
		INNER JOIN CLIENTE C ON UC.ID_CLIENTE = C.ID_CLIENTE
		INNER JOIN ESTADO E ON UC.ID_ESTADO = E.ID_ESTADO
		INNER JOIN ESTADO E1 ON U.ID_ESTADO = E1.ID_ESTADO
		INNER JOIN ESTADO E2 ON C.ID_ESTADO = E2.ID_ESTADO
		INNER JOIN TIPO_USUARIO TU ON U.ID_TIPO_USUARIO = TU.ID_TIPO_USUARIO
	WHERE
		(@ID_USUARIO IS NULL OR UC.ID_USUARIO = @ID_USUARIO)
		AND (@ID_CLIENTE IS NULL OR UC.ID_CLIENTE = @ID_CLIENTE)
		AND (@ID_ESTADO IS NULL OR UC.ID_ESTADO = @ID_ESTADO)
	ORDER BY
		UC.ID_CLIENTE, UC.ID_USUARIO
	
	SET NOCOUNT OFF

END
GO

ALTER PROCEDURE TI_SP_REGISTRAR_USUARIO_CLIENTE(
	@ID_USUARIO VARCHAR(20), 
	@ID_CLIENTE INT, 
	@ID_ESTADO INT, 
	@USUARIO_CREACION VARCHAR(20)
)
AS
BEGIN

	SET NOCOUNT ON
	
	DECLARE @FECHA_HORA_LOCAL DATETIME
	SET @FECHA_HORA_LOCAL = DATEADD(HH,-5,GETUTCDATE())	
	
	INSERT INTO USUARIO_CLIENTE (ID_USUARIO, ID_CLIENTE, ID_ESTADO, USUARIO_CREACION, FECHA_CREACION)
	VALUES (@ID_USUARIO, @ID_CLIENTE, @ID_ESTADO, @USUARIO_CREACION, @FECHA_HORA_LOCAL)
	
	SET NOCOUNT OFF

END
GO

ALTER PROCEDURE TI_SP_ACTUALIZAR_USUARIO_CLIENTE(
	@ID_USUARIO VARCHAR(20), 
	@ID_CLIENTE INT, 
	@ID_ESTADO INT, 
	@USUARIO_MODIFICACION VARCHAR(20)
)
AS
BEGIN

	SET NOCOUNT ON
	
	DECLARE @FECHA_HORA_LOCAL DATETIME
	SET @FECHA_HORA_LOCAL = DATEADD(HH,-5,GETUTCDATE())	
	
	UPDATE	
		USUARIO_CLIENTE
	SET
		ID_ESTADO = ISNULL(@ID_ESTADO, ID_ESTADO),
		USUARIO_MODIFICACION = @USUARIO_MODIFICACION, 
		FECHA_MODIFICACION = @FECHA_HORA_LOCAL
	WHERE
		ID_CLIENTE = @ID_CLIENTE
		AND ID_USUARIO = @ID_USUARIO
	
	SET NOCOUNT OFF

END
GO

----------------------------TABLA ESTADO_TICKET----------------------------
CREATE TABLE ESTADO_TICKET(
	ID_ESTADO_TICKET INT PRIMARY KEY NOT NULL, 
	DESCRIPCION VARCHAR(50),
	ID_ESTADO INT FOREIGN KEY REFERENCES ESTADO(ID_ESTADO), 
	FECHA_CREACION DATETIME,
	USUARIO_CREACION VARCHAR(20),
	FECHA_MODIFICACION DATETIME,
	USUARIO_MODIFICACION VARCHAR(20)		
)
GO

INSERT INTO ESTADO_TICKET (ID_ESTADO_TICKET, DESCRIPCION, ID_ESTADO, FECHA_CREACION, USUARIO_CREACION) VALUES (1, 'REGISTRADO', 1, GETDATE(), 'OALVAREZ')
INSERT INTO ESTADO_TICKET (ID_ESTADO_TICKET, DESCRIPCION, ID_ESTADO, FECHA_CREACION, USUARIO_CREACION) VALUES (2, 'ASIGNADO', 1, GETDATE(), 'OALVAREZ')
INSERT INTO ESTADO_TICKET (ID_ESTADO_TICKET, DESCRIPCION, ID_ESTADO, FECHA_CREACION, USUARIO_CREACION) VALUES (3, 'RECIBIDO', 1, GETDATE(), 'OALVAREZ')
INSERT INTO ESTADO_TICKET (ID_ESTADO_TICKET, DESCRIPCION, ID_ESTADO, FECHA_CREACION, USUARIO_CREACION) VALUES (4, 'ATENDIDO', 1, GETDATE(), 'OALVAREZ')
INSERT INTO ESTADO_TICKET (ID_ESTADO_TICKET, DESCRIPCION, ID_ESTADO, FECHA_CREACION, USUARIO_CREACION) VALUES (5, 'CERRADO', 1, GETDATE(), 'OALVAREZ')
INSERT INTO ESTADO_TICKET (ID_ESTADO_TICKET, DESCRIPCION, ID_ESTADO, FECHA_CREACION, USUARIO_CREACION) VALUES (6, 'CANCELADO', 1, GETDATE(), 'OALVAREZ')
GO

CREATE PROCEDURE TI_SP_CONSULTAR_ESTADO_TICKET(
	@ID_ESTADO_TICKET INT, 
	@DESCRIPCION VARCHAR(50), 
	@ID_ESTADO INT
)
AS
BEGIN

	SET NOCOUNT ON
	
	IF (@DESCRIPCION IS NOT NULL)
		SET @DESCRIPCION = '%' + RTRIM(@DESCRIPCION) + '%'
	
	SELECT 
		ET.ID_ESTADO_TICKET, ET.DESCRIPCION, ET.ID_ESTADO, E.DESCRIPCION
	FROM 
		ESTADO_TICKET ET
		INNER JOIN ESTADO E ON ET.ID_ESTADO = E.ID_ESTADO
	WHERE
		(@ID_ESTADO_TICKET IS NULL OR ET.ID_ESTADO_TICKET = @ID_ESTADO_TICKET)
		AND (@DESCRIPCION IS NULL OR ET.DESCRIPCION LIKE @DESCRIPCION)
		AND (@ID_ESTADO IS NULL OR ET.ID_ESTADO = @ID_ESTADO)
	ORDER BY
		ET.ID_ESTADO_TICKET
	
	SET NOCOUNT OFF

END
GO

ALTER PROCEDURE TI_SP_REGISTRAR_ESTADO_TICKET(
	@DESCRIPCION VARCHAR(50),
	@ID_ESTADO INT, 
	@USUARIO_CREACION VARCHAR(20), 
	@ID INT OUTPUT
)
AS
BEGIN

	SET NOCOUNT ON
	
	DECLARE @ID_ESTADO_TICKET INT 
	SELECT @ID_ESTADO_TICKET = MAX(ID_ESTADO_TICKET) + 1 FROM ESTADO_TICKET
	
	DECLARE @FECHA_HORA_LOCAL DATETIME
	SET @FECHA_HORA_LOCAL = DATEADD(HH,-5,GETUTCDATE())	
	
	IF (@ID_ESTADO_TICKET IS NULL)
		SET @ID_ESTADO_TICKET = 1
		
	INSERT INTO ESTADO_TICKET (ID_ESTADO_TICKET, DESCRIPCION, ID_ESTADO, FECHA_CREACION, USUARIO_CREACION) 
	VALUES (@ID_ESTADO_TICKET, @DESCRIPCION, @ID_ESTADO, @FECHA_HORA_LOCAL, @USUARIO_CREACION)

	SET @ID = @ID_ESTADO_TICKET
	
	SET NOCOUNT OFF

END
GO

ALTER PROCEDURE TI_SP_ACTUALIZAR_ESTADO_TICKET(
	@ID_ESTADO_TICKET INT,
	@DESCRIPCION VARCHAR(50),
	@ID_ESTADO INT, 
	@USUARIO_MODIFICACION VARCHAR(20)
)
AS
BEGIN

	SET NOCOUNT ON
	
	DECLARE @FECHA_HORA_LOCAL DATETIME
	SET @FECHA_HORA_LOCAL = DATEADD(HH,-5,GETUTCDATE())	
	
	UPDATE
		ESTADO_TICKET
	SET
		DESCRIPCION = ISNULL(@DESCRIPCION, DESCRIPCION), 
		ID_ESTADO = ISNULL(@ID_ESTADO, ID_ESTADO),
		USUARIO_MODIFICACION = @USUARIO_MODIFICACION, 
		FECHA_MODIFICACION = @FECHA_HORA_LOCAL
	WHERE
		ID_ESTADO_TICKET = @ID_ESTADO_TICKET
	
	SET NOCOUNT OFF

END
GO

----------------------------TABLA MONEDA----------------------------
CREATE TABLE MONEDA(
	ID_MONEDA VARCHAR(5) PRIMARY KEY NOT NULL,
	DESCRIPCION VARCHAR(20),
	USUARIO_CREACION VARCHAR(20),
	FECHA_CREACION DATETIME,
	USUARIO_MODIFICACION VARCHAR(20),
	FECHA_MODIFICACION DATETIME	
)
GO

INSERT INTO MONEDA (ID_MONEDA, DESCRIPCION, USUARIO_CREACION, FECHA_CREACION) VALUES ('S/.', 'NUEVOS SOLES', 'OALVAREZ', GETDATE())
INSERT INTO MONEDA (ID_MONEDA, DESCRIPCION, USUARIO_CREACION, FECHA_CREACION) VALUES ('$', 'DÓLARES AMERICANOS', 'OALVAREZ', GETDATE())
GO

CREATE PROCEDURE TI_SP_CONSULTAR_MONEDA(
	@ID_MONEDA VARCHAR(5),
	@DESCRIPCION VARCHAR(20)
)
AS
BEGIN

	SET NOCOUNT ON
	
	IF (@DESCRIPCION IS NOT NULL)
		SET @DESCRIPCION = '%' + RTRIM(@DESCRIPCION) + '%'
		
	SELECT
		ID_MONEDA, DESCRIPCION
	FROM
		MONEDA
	WHERE
		(@ID_MONEDA IS NULL OR ID_MONEDA = @ID_MONEDA)
		AND (@DESCRIPCION IS NULL OR DESCRIPCION LIKE @DESCRIPCION)
	ORDER BY
		ID_MONEDA
	
	SET NOCOUNT OFF
	
END
GO

----------------------------TABLA REPUESTOS----------------------------
CREATE TABLE REPUESTO(
	ID_REPUESTO INT PRIMARY KEY NOT NULL,
	DESCRIPCION VARCHAR(100),
	ID_MONEDA VARCHAR(5) FOREIGN KEY REFERENCES MONEDA(ID_MONEDA),
	ID_ESTADO INT FOREIGN KEY REFERENCES ESTADO(ID_ESTADO),
	PRECIO_ACTUAL DECIMAL(8,4),
	STOCK_ACTUAL DECIMAL(8,4),
	USUARIO_CREACION VARCHAR(20),
	FECHA_CREACION DATETIME,
	USUARIO_MODIFICACION VARCHAR(20),
	FECHA_MODIFICACION DATETIME		
)
GO

CREATE PROCEDURE TI_SP_CONSULTAR_REPUESTO(
	@ID_REPUESTO INT,
	@DESCRIPCION VARCHAR(100),
	@ID_ESTADO INT
)
AS
BEGIN
	
	SET NOCOUNT ON
	
	IF (@DESCRIPCION IS NOT NULL)
		BEGIN
			SET @DESCRIPCION = '%' + RTRIM(@DESCRIPCION) + '%'
		END
	
	SELECT 
		R.ID_REPUESTO, R.DESCRIPCION, R.ID_MONEDA, M.DESCRIPCION, R.ID_ESTADO, E.DESCRIPCION, R.PRECIO_ACTUAL, R.STOCK_ACTUAL
	FROM 
		REPUESTO R
		INNER JOIN ESTADO E ON R.ID_ESTADO = E.ID_ESTADO
		INNER JOIN MONEDA M ON R.ID_MONEDA = M.ID_MONEDA
	WHERE
		(@ID_REPUESTO IS NULL OR R.ID_REPUESTO = @ID_REPUESTO)
		AND (@DESCRIPCION IS NULL OR R.DESCRIPCION LIKE @DESCRIPCION)
		AND (@ID_ESTADO IS NULL OR R.ID_ESTADO = @ID_ESTADO)
	ORDER BY
		R.ID_REPUESTO
	
	SET NOCOUNT OFF
	
END
GO

ALTER PROCEDURE TI_SP_REGISTRAR_REPUESTO(
	@DESCRIPCION VARCHAR(100),
	@ID_MONEDA VARCHAR(5),
	@ID_ESTADO INT,
	@PRECIO_ACTUAL DECIMAL(8,4),
	@STOCK_ACTUAL DECIMAL(8,4),
	@USUARIO_CREACION VARCHAR(20), 
	@ID INT OUTPUT
)
AS
BEGIN
	SET NOCOUNT ON
	
	DECLARE @FECHA_HORA_LOCAL DATETIME
	SET @FECHA_HORA_LOCAL = DATEADD(HH,-5,GETUTCDATE())	
	
	DECLARE @ID_REPUESTO INT
	SELECT @ID_REPUESTO = MAX(ID_REPUESTO)+1 FROM REPUESTO
	
	IF (@ID_REPUESTO IS NULL)
		SET @ID_REPUESTO = 1
		
	INSERT INTO REPUESTO (ID_REPUESTO, DESCRIPCION, ID_MONEDA, ID_ESTADO, PRECIO_ACTUAL, STOCK_ACTUAL, USUARIO_CREACION, FECHA_CREACION)
	VALUES (@ID_REPUESTO, @DESCRIPCION, @ID_MONEDA, @ID_ESTADO, @PRECIO_ACTUAL, @STOCK_ACTUAL, @USUARIO_CREACION, @FECHA_HORA_LOCAL)
	
	SET @ID = @ID_REPUESTO
	
	SET NOCOUNT OFF
END
GO

ALTER PROCEDURE TI_SP_ACTUALIZAR_REPUESTO(
	@ID_REPUESTO INT,
	@DESCRIPCION VARCHAR(100),
	@ID_MONEDA VARCHAR(5),
	@ID_ESTADO INT,
	@PRECIO_ACTUAL DECIMAL(8,4),
	@STOCK_ACTUAL DECIMAL(8,4),
	@USUARIO_MODIFICACION VARCHAR(20)
)
AS
BEGIN
	SET NOCOUNT ON
	
	UPDATE 
		REPUESTO 
	SET
		DESCRIPCION = ISNULL(@DESCRIPCION, DESCRIPCION), 
		ID_MONEDA = ISNULL(@ID_MONEDA, ID_MONEDA), 
		ID_ESTADO = ISNULL(@ID_ESTADO, ID_ESTADO), 
		PRECIO_ACTUAL = ISNULL(@PRECIO_ACTUAL, PRECIO_ACTUAL), 
		STOCK_ACTUAL = ISNULL(@STOCK_ACTUAL, STOCK_ACTUAL), 
		USUARIO_MODIFICACION = @USUARIO_MODIFICACION, 
		FECHA_CREACION = GETDATE()
	WHERE
		ID_REPUESTO = @ID_REPUESTO
	
	SET NOCOUNT OFF
END
GO

----------------------------TABLA TICKET----------------------------
CREATE TABLE TICKET(
	NRO_TICKET INT PRIMARY KEY NOT NULL,
	ID_CLIENTE INT FOREIGN KEY REFERENCES CLIENTE(ID_CLIENTE),
	ID_SEDE INT FOREIGN KEY REFERENCES SEDE_CLIENTE(ID_SEDE),
	FECHA_TICKET DATETIME,
	ID_CATEGORIA_PROBLEMA INT FOREIGN KEY REFERENCES CATEGORIA_PROBLEMA(ID_CATEGORIA_PROBLEMA),
	ID_NIVEL_URGENCIA INT FOREIGN KEY REFERENCES NIVEL_URGENCIA(ID_NIVEL_URGENCIA),
	TITULO VARCHAR(100),
	DETALLE VARCHAR(500),
	SOLUCION VARCHAR(500),
	OBSERVACIONES VARCHAR(500), 
	ID_ESTADO_TICKET INT FOREIGN KEY REFERENCES ESTADO_TICKET(ID_ESTADO_TICKET)
)
GO

ALTER TABLE TICKET ADD NRO_TICKET_CLIENTE VARCHAR(20)
GO
ALTER TABLE TICKET ADD ID_USUARIO_SEDE INT
GO

INSERT INTO CLIENTE (ID_CLIENTE, RAZON_SOCIAL, NRO_DI, DIRECCION, ID_DEPARTAMENTO, ID_PROVINCIA, ID_DISTRITO, TELEFONO, EMAIL, NOMBRE_CONTACTO, CARGO_CONTACTO, 
ID_ESTADO, FECHA_CREACION, USUARIO_CREACION)
VALUES (1, 'OMAR ALVAREZ SAC', '10437350979', 'URB. PALOMINO F2 DPTO. 12', '15', '01', '01', '979344530', 'OALVAREZ86@GMAIL.COM', 'OMAR ALVAREZ', 'GERENTE GENERAL', 
1, GETDATE(), 'OALVAREZ')
GO
INSERT INTO SEDE_CLIENTE (ID_SEDE, NOMBRE, ID_CLIENTE, ID_UNIDAD_NEGOCIO, DIRECCION, ID_DEPARTAMENTO, ID_PROVINCIA, ID_DISTRITO, TELEFONO, NOMBRE_CONTACTO, 
CARGO_CONTACTO, ID_ESTADO, CENTRO_COSTO, FECHA_CREACION, USUARIO_CREACION)
VALUES (1, 'OFICINA PRINCIPAL', 1, 1, 'URB. PALOMINO F2 DPTO. 12', '15', '01', '01', '979344530', 'OMAR ALVAREZ', 'GERENTE GENERAL',
1, '01-1-1-1-01', GETDATE(), 'OALVAREZ')
GO
INSERT INTO USUARIO_CLIENTE (ID_CLIENTE, ID_USUARIO, ID_ESTADO, FECHA_CREACION, USUARIO_CREACION)
VALUES (1, 'OALVAREZ', 1, GETDATE(), 'OALVAREZ')
GO
INSERT INTO TICKET(NRO_TICKET, ID_CLIENTE, ID_SEDE, FECHA_TICKET, ID_CATEGORIA_PROBLEMA, ID_NIVEL_URGENCIA, TITULO, DETALLE, ID_ESTADO_TICKET)
VALUES (1, 1, 1, '01/22/2015', 1, 3, 'FALLA DE IMPRESORA', 'LA IMPRESORA ATORA EL PAPEL Y NO SE PUEDE IMPRIMIR NINGÚN DOCUMENTO',1)
INSERT INTO TICKET(NRO_TICKET, ID_CLIENTE, ID_SEDE, FECHA_TICKET, ID_CATEGORIA_PROBLEMA, ID_NIVEL_URGENCIA, TITULO, DETALLE, ID_ESTADO_TICKET)
VALUES (2, 1, 1, '01/22/2015', 2, 3, 'MICROSOFT OFFICE NO CARGA', 'AL ABRIR WORD O EXCEL APARECE UN ERROR Y SE CIERRA',1)
GO
INSERT INTO TICKET_REGISTRO(NRO_TICKET, ID_ESTADO_TICKET, ID_USUARIO, FECHA_HORA_REGISTRO)
VALUES (1, 1, 'OALVAREZ', GETDATE())
GO
INSERT INTO TICKET_REGISTRO(NRO_TICKET, ID_ESTADO_TICKET, ID_USUARIO, FECHA_HORA_REGISTRO)
VALUES (2, 1, 'OALVAREZ', GETDATE()+0.5)
GO

--EXEC TI_SP_CONSULTAR_CLIENTE NULL, NULL, NULL, NULL, NULL, NULL, NULL
--EXEC TI_SP_CONSULTAR_SEDE_CLIENTE NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL
--EXEC TI_SP_CONSULTAR_TICKET NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL
--EXEC TI_SP_CONSULTAR_USUARIO_CLIENTE 'OALVAREZ',NULL, NULL

ALTER PROCEDURE TI_SP_CONSULTAR_TICKET(
	@NRO_TICKET INT,
	@ID_CLIENTE INT,
	@ID_SEDE INT,
	@ID_CATEGORIA_PROBLEMA INT,
	@ID_NIVEL_URGENCIA INT,
	@FECHA_DESDE DATETIME,
	@FECHA_HASTA DATETIME,
	@ID_ESTADO_TICKET INT,
	@ID_USUARIO_ASIGNADO VARCHAR(20)
)
AS
BEGIN

	SET NOCOUNT ON
	
	DECLARE @FECHA_HORA_LOCAL DATETIME
	SET @FECHA_HORA_LOCAL = DATEADD(HH,-5,GETUTCDATE())		
	
	SELECT
		T.NRO_TICKET, T.ID_CLIENTE, C.RAZON_SOCIAL, T.ID_SEDE, SC.NOMBRE, T.FECHA_TICKET, T.ID_CATEGORIA_PROBLEMA, CP.DESCRIPCION, T.ID_NIVEL_URGENCIA, NU.DESCRIPCION, 
		ISNULL(T.TITULO, ''), ISNULL(T.DETALLE, ''), ISNULL(T.SOLUCION, ''), ISNULL(T.OBSERVACIONES, ''), T.ID_ESTADO_TICKET, ET.DESCRIPCION, 
		DATEDIFF(mi,TR.FECHA_HORA_REGISTRO, ISNULL(TR2.FECHA_HORA_REGISTRO, @FECHA_HORA_LOCAL) ), SC.DIRECCION, 'USUARIO_ASIGNADO' = ISNULL(TR1.ID_USUARIO_ASIGNADO, ''), 'NRO_TICKET_CLIENTE' = ISNULL(T.NRO_TICKET_CLIENTE, ''),
		'ID_USUARIO_SEDE' = ISNULL(T.ID_USUARIO_SEDE,0), ISNULL(US.NOMBRE, ''), ISNULL(US.ID_AREA_USUARIO_SEDE,0), ISNULL(AUS.DESCRIPCION, '')
	FROM
		TICKET T
		INNER JOIN CLIENTE C ON T.ID_CLIENTE = C.ID_CLIENTE
		INNER JOIN SEDE_CLIENTE SC ON T.ID_CLIENTE = SC.ID_CLIENTE AND T.ID_SEDE = SC.ID_SEDE
		INNER JOIN CATEGORIA_PROBLEMA CP ON T.ID_CATEGORIA_PROBLEMA = CP.ID_CATEGORIA_PROBLEMA
		INNER JOIN NIVEL_URGENCIA NU ON T.ID_NIVEL_URGENCIA = NU.ID_NIVEL_URGENCIA
		INNER JOIN ESTADO_TICKET ET ON T.ID_ESTADO_TICKET = ET.ID_ESTADO_TICKET
		INNER JOIN TICKET_REGISTRO TR ON T.NRO_TICKET = TR.NRO_TICKET AND TR.ID_ESTADO_TICKET=1 --PARA OBTENER LA HORA DE REGISTRO
		LEFT JOIN TICKET_REGISTRO TR1 ON T.NRO_TICKET = TR1.NRO_TICKET AND TR1.ID_ESTADO_TICKET = 2 --PARA OBTENER EL TÉCNICO ASIGNADO
		LEFT JOIN TICKET_REGISTRO TR2 ON T.NRO_TICKET = TR2.NRO_TICKET AND TR2.ID_ESTADO_TICKET = 5 --PARA OBTENER LA HORA DE CIERRE
		LEFT JOIN USUARIO_SEDE US ON T.ID_USUARIO_SEDE = US.ID_USUARIO_SEDE
		LEFT JOIN AREA_USUARIO_SEDE AUS ON US.ID_AREA_USUARIO_SEDE = AUS.ID_AREA_USUARIO_SEDE
	WHERE
		(@NRO_TICKET IS NULL OR T.NRO_TICKET = @NRO_TICKET)
		AND (@ID_CLIENTE IS NULL OR T.ID_CLIENTE = @ID_CLIENTE)
		AND (@ID_SEDE IS NULL OR T.ID_SEDE = @ID_SEDE)
		AND (@ID_CATEGORIA_PROBLEMA IS NULL OR T.ID_CATEGORIA_PROBLEMA = @ID_CATEGORIA_PROBLEMA)
		AND (@ID_NIVEL_URGENCIA IS NULL OR T.ID_NIVEL_URGENCIA = @ID_NIVEL_URGENCIA)
		AND (@FECHA_DESDE IS NULL OR T.FECHA_TICKET >= @FECHA_DESDE)
		AND (@FECHA_HASTA IS NULL OR T.FECHA_TICKET <= @FECHA_HASTA)
		AND (@ID_ESTADO_TICKET IS NULL OR T.ID_ESTADO_TICKET = @ID_ESTADO_TICKET)
		AND (@ID_USUARIO_ASIGNADO IS NULL OR TR1.ID_USUARIO_ASIGNADO = @ID_USUARIO_ASIGNADO)
	ORDER BY
		T.FECHA_TICKET DESC, T.NRO_TICKET DESC
	
	SET NOCOUNT OFF

END


ALTER PROCEDURE TI_SP_REGISTRAR_TICKET(
	@ID_CLIENTE INT,
	@ID_SEDE INT,
	@FECHA_TICKET DATETIME,
	@ID_CATEGORIA_PROBLEMA INT, 
	@ID_NIVEL_URGENCIA INT, 
	@TITULO VARCHAR(100),
	@DETALLE VARCHAR(500),
	@SOLUCION VARCHAR(500),
	@OBSERVACIONES VARCHAR(500),
	@ID_USUARIO VARCHAR(20),
	@ID INT OUTPUT,
	@NRO_TICKET_CLIENTE VARCHAR(20),
	@ID_USUARIO_SEDE INT
)
AS
BEGIN

	SET NOCOUNT ON
	
	DECLARE @NRO_TICKET INT
	SELECT @NRO_TICKET = MAX(NRO_TICKET) + 1 FROM TICKET
	
	DECLARE @FECHA_HORA_LOCAL DATETIME
	SET @FECHA_HORA_LOCAL = DATEADD(HH,-5,GETUTCDATE())	
	
	IF (@NRO_TICKET IS NULL)
		SET @NRO_TICKET = 1
		
	INSERT INTO TICKET (NRO_TICKET, ID_CLIENTE, ID_SEDE, FECHA_TICKET, ID_CATEGORIA_PROBLEMA, ID_NIVEL_URGENCIA, TITULO, DETALLE, SOLUCION, OBSERVACIONES, ID_ESTADO_TICKET, 
		NRO_TICKET_CLIENTE, ID_USUARIO_SEDE)
	VALUES (@NRO_TICKET, @ID_CLIENTE, @ID_SEDE, @FECHA_TICKET, @ID_CATEGORIA_PROBLEMA, @ID_NIVEL_URGENCIA, @TITULO, @DETALLE, @SOLUCION, @OBSERVACIONES, 1, @NRO_TICKET_CLIENTE, 
		@ID_USUARIO_SEDE)
	
	INSERT INTO TICKET_REGISTRO (NRO_TICKET, ID_ESTADO_TICKET, ID_USUARIO, FECHA_HORA_REGISTRO)
	VALUES (@NRO_TICKET, 1, @ID_USUARIO, @FECHA_HORA_LOCAL)
	
	SET @ID = @NRO_TICKET
	
	SET NOCOUNT OFF

END
GO

ALTER PROCEDURE TI_SP_ACTUALIZAR_TICKET(
	@NRO_TICKET INT,
	@ID_SEDE INT,
	@ID_CATEGORIA_PROBLEMA INT, 
	@ID_NIVEL_URGENCIA INT, 
	@TITULO VARCHAR(100),
	@DETALLE VARCHAR(500),
	@SOLUCION VARCHAR(500),
	@OBSERVACIONES VARCHAR(500),
	@NRO_TICKET_CLIENTE VARCHAR(20),
	@ID_USUARIO_SEDE INT
)
AS
BEGIN

	SET NOCOUNT ON
	
	UPDATE
		TICKET
	SET
		ID_SEDE = ISNULL(@ID_SEDE, ID_SEDE), 
		ID_CATEGORIA_PROBLEMA = ISNULL(@ID_CATEGORIA_PROBLEMA, ID_CATEGORIA_PROBLEMA),
		ID_NIVEL_URGENCIA = ISNULL(@ID_NIVEL_URGENCIA, ID_NIVEL_URGENCIA),
		TITULO = ISNULL(@TITULO, TITULO),
		DETALLE = ISNULL(@DETALLE, DETALLE),
		SOLUCION = ISNULL(@SOLUCION, SOLUCION), 
		OBSERVACIONES = ISNULL(@OBSERVACIONES, OBSERVACIONES), 
		NRO_TICKET_CLIENTE = ISNULL(@NRO_TICKET_CLIENTE, NRO_TICKET_CLIENTE),
		ID_USUARIO_SEDE = ISNULL(@ID_USUARIO_SEDE, ID_USUARIO_SEDE)
	WHERE
		NRO_TICKET = @NRO_TICKET
		
	SET NOCOUNT OFF

END


----------------------------TABLA TICKET_DETALLE----------------------------
CREATE TABLE TICKET_DETALLE(
	NRO_TICKET INT FOREIGN KEY REFERENCES TICKET(NRO_TICKET),
	ID_REPUESTO INT FOREIGN KEY REFERENCES REPUESTO(ID_REPUESTO),
	CANTIDAD DECIMAL(8,4),
	ID_MONEDA VARCHAR(5) FOREIGN KEY REFERENCES MONEDA(ID_MONEDA),
	PRECIO DECIMAL(8,4)
)
GO

	ALTER TABLE TICKET_DETALLE ADD USUARIO_CREACION VARCHAR(20),
	FECHA_CREACION DATETIME,
	USUARIO_MODIFICACION VARCHAR(20),
	FECHA_MODIFICACION DATETIME		

CREATE PROCEDURE TI_SP_CONSULTAR_TICKET_DETALLE(
	@NRO_TICKET INT
)
AS
BEGIN

	SET NOCOUNT ON
	
	SELECT 
		TD.NRO_TICKET, TD.ID_REPUESTO, R.DESCRIPCION, TD.CANTIDAD, TD.ID_MONEDA, M.DESCRIPCION, TD.PRECIO
	FROM 
		TICKET_DETALLE TD
		INNER JOIN REPUESTO R ON TD.ID_REPUESTO = R.ID_REPUESTO
		INNER JOIN MONEDA M ON TD.ID_MONEDA = M.ID_MONEDA
	WHERE
		(@NRO_TICKET IS NULL OR TD.NRO_TICKET = @NRO_TICKET)
	
	SET NOCOUNT OFF

END
GO

ALTER PROCEDURE TI_SP_REGISTRAR_TICKET_DETALLE(
	@NRO_TICKET INT,
	@ID_REPUESTO INT,
	@CANTIDAD DECIMAL(8,4),
	@ID_MONEDA VARCHAR(5),
	@PRECIO DECIMAL(8,4),
	@USUARIO_CREACION VARCHAR(20)
)
AS
BEGIN

	SET NOCOUNT ON
	
	DECLARE @FECHA_HORA_LOCAL DATETIME
	SET @FECHA_HORA_LOCAL = DATEADD(HH,-5,GETUTCDATE())	
	
	INSERT INTO TICKET_DETALLE (NRO_TICKET, ID_REPUESTO, CANTIDAD, ID_MONEDA, PRECIO, USUARIO_CREACION, FECHA_CREACION)
	VALUES (@NRO_TICKET, @ID_REPUESTO, @CANTIDAD, @ID_MONEDA, @PRECIO, @USUARIO_CREACION, @FECHA_HORA_LOCAL)
	
	--UPDATE REPUESTO SET STOCK_ACTUAL = STOCK_ACTUAL - @CANTIDAD WHERE ID_REPUESTO = @ID_REPUESTO
	
	SET NOCOUNT OFF

END
GO

ALTER PROCEDURE TI_SP_ACTUALIZAR_TICKET_DETALLE(
	@NRO_TICKET INT,
	@ID_REPUESTO INT,
	@CANTIDAD DECIMAL(8,4),
	@ID_MONEDA VARCHAR(5),
	@PRECIO DECIMAL(8,4),
	@USUARIO_MODIFICACION VARCHAR(20)
)
AS
BEGIN

	SET NOCOUNT ON
	
	DECLARE @FECHA_HORA_LOCAL DATETIME
	SET @FECHA_HORA_LOCAL = DATEADD(HH,-5,GETUTCDATE())	
	
	UPDATE
		TICKET_DETALLE
	SET
		CANTIDAD = ISNULL(@CANTIDAD, CANTIDAD),
		ID_MONEDA = ISNULL(@ID_MONEDA, ID_MONEDA),
		PRECIO = ISNULL(@PRECIO, PRECIO), 
		USUARIO_MODIFICACION = @USUARIO_MODIFICACION, 
		FECHA_MODIFICACION = @FECHA_HORA_LOCAL
	WHERE
		NRO_TICKET = @NRO_TICKET
		AND ID_REPUESTO = @ID_REPUESTO
	
	SET NOCOUNT OFF

END
GO

CREATE PROCEDURE TI_SP_ELIMINAR_TICKET_DETALLE(
	@NRO_TICKET INT,
	@ID_REPUESTO INT
)
AS
BEGIN

	SET NOCOUNT ON
	
	DELETE 
		TICKET_DETALLE
	WHERE
		NRO_TICKET = @NRO_TICKET
		AND ID_REPUESTO = @ID_REPUESTO
	
	SET NOCOUNT OFF

END
GO

----------------------------TABLA REGISTRO_TICKET----------------------------
CREATE TABLE TICKET_REGISTRO(
	NRO_TICKET INT FOREIGN KEY REFERENCES TICKET(NRO_TICKET),
	ID_ESTADO_TICKET INT FOREIGN KEY REFERENCES ESTADO_TICKET(ID_ESTADO_TICKET),
	ID_USUARIO VARCHAR(20),
	FECHA_HORA_REGISTRO DATETIME
)
GO

ALTER TABLE TICKET_REGISTRO ADD ID_USUARIO_ASIGNADO VARCHAR(20)
GO

ALTER TABLE TICKET_REGISTRO ADD OBSERVACION VARCHAR(100)
GO

ALTER PROCEDURE TI_SP_CONSULTAR_TICKET_REGISTRO(
	@NRO_TICKET INT,
	@ID_ESTADO_TICKET INT, 
	@ID_USUARIO VARCHAR(20),
	@ID_USUARIO_ASIGNADO VARCHAR(20)
)
AS
BEGIN

	SET NOCOUNT ON
	
	SELECT
		TI.NRO_TICKET, TI.ID_ESTADO_TICKET, ET.DESCRIPCION, TI.ID_USUARIO, U.NOMBRE, TI.FECHA_HORA_REGISTRO, 
		'ID_USUARIO_ASIGNADO' = ISNULL(TI.ID_USUARIO_ASIGNADO, ''), 'USUARIO_ASIGNADO' = '', --ISNULL(U1.NOMBRE, ''), 
		'OBSERVACION' = ISNULL(OBSERVACION, '')
	FROM
		TICKET_REGISTRO TI
		INNER JOIN ESTADO_TICKET ET ON TI.ID_ESTADO_TICKET = ET.ID_ESTADO_TICKET
		INNER JOIN USUARIO U ON TI.ID_USUARIO = U.ID_USUARIO
		--LEFT JOIN USUARIO U1 ON TI.ID_USUARIO_ASIGNADO = U1.ID_USUARIO
	WHERE
		(@NRO_TICKET IS NULL OR TI.NRO_TICKET = @NRO_TICKET)
		AND (@ID_ESTADO_TICKET IS NULL OR TI.ID_ESTADO_TICKET = @ID_ESTADO_TICKET)
		AND (@ID_USUARIO IS NULL OR TI.ID_USUARIO = @ID_USUARIO)
		AND (@ID_USUARIO_ASIGNADO IS NULL OR TI.ID_USUARIO_ASIGNADO = @ID_USUARIO_ASIGNADO)
	ORDER BY
		TI.NRO_TICKET, TI.FECHA_HORA_REGISTRO
	
	SET NOCOUNT OFF

END
GO

ALTER PROCEDURE TI_SP_REGISTRAR_TICKET_REGISTRO(
	@NRO_TICKET INT,
	@ID_ESTADO_TICKET INT, 
	@ID_USUARIO VARCHAR(20),
	@ID_USUARIO_ASIGNADO VARCHAR(20),
	@OBSERVACION VARCHAR(100)
)
AS
BEGIN

	SET NOCOUNT ON
	
	DECLARE @FECHA_HORA_LOCAL DATETIME
	SET @FECHA_HORA_LOCAL = DATEADD(HH,-5,GETUTCDATE())	
	
	INSERT INTO TICKET_REGISTRO (NRO_TICKET, ID_ESTADO_TICKET, ID_USUARIO, FECHA_HORA_REGISTRO, ID_USUARIO_ASIGNADO, OBSERVACION)
	VALUES (@NRO_TICKET, @ID_ESTADO_TICKET, @ID_USUARIO, @FECHA_HORA_LOCAL, @ID_USUARIO_ASIGNADO, @OBSERVACION)
	
	UPDATE TICKET SET ID_ESTADO_TICKET = @ID_ESTADO_TICKET WHERE NRO_TICKET = @NRO_TICKET
	
	SET NOCOUNT OFF

END
GO


------------------------
INSERT INTO CLIENTE (ID_CLIENTE, RAZON_SOCIAL, NRO_DI, DIRECCION, ID_DEPARTAMENTO, ID_PROVINCIA, ID_DISTRITO, TELEFONO, EMAIL, NOMBRE_CONTACTO, CARGO_CONTACTO, 
ID_ESTADO, FECHA_CREACION, USUARIO_CREACION)
VALUES (2, 'PERUANA DE COMBUSTIBLES', '20259033072', 'AV. ANDRÉS REYES 360', '15', '01', '31', '4114600', 'hvillanueva@pecsa.com.pe', 'Henry Villanueva', 'Jefe de Soporte', 
1, GETDATE(), 'OALVAREZ')
GO
INSERT INTO SEDE_CLIENTE (ID_SEDE, NOMBRE, ID_CLIENTE, ID_UNIDAD_NEGOCIO, DIRECCION, ID_DEPARTAMENTO, ID_PROVINCIA, ID_DISTRITO, TELEFONO, NOMBRE_CONTACTO, 
CARGO_CONTACTO, ID_ESTADO, CENTRO_COSTO, FECHA_CREACION, USUARIO_CREACION)
VALUES (2, 'OFICINA PRINCIPAL', 2, 1, 'AV. ANDRÉS REYES 360', '15', '01', '31', '4114600', 'Henry Villanueva', 'Jefe de Soporte',1, '01-1-1-1-01', GETDATE(), 'OALVAREZ')
GO
INSERT INTO USUARIO_CLIENTE (ID_CLIENTE, ID_USUARIO, ID_ESTADO, FECHA_CREACION, USUARIO_CREACION)
VALUES (1, 'usuariopecsa', 2, GETDATE(), 'OALVAREZ')
GO

----------------------------TABLA AREA_USUARIO_SEDE----------------------------
CREATE TABLE AREA_USUARIO_SEDE(
	ID_AREA_USUARIO_SEDE INT PRIMARY KEY NOT NULL, 
	DESCRIPCION VARCHAR(50),
	ID_ESTADO INT FOREIGN KEY REFERENCES ESTADO(ID_ESTADO), 
	FECHA_CREACION DATETIME,
	USUARIO_CREACION VARCHAR(20),
	FECHA_MODIFICACION DATETIME,
	USUARIO_MODIFICACION VARCHAR(20)		
)
GO

INSERT INTO AREA_USUARIO_SEDE (ID_AREA_USUARIO_SEDE, DESCRIPCION, ID_ESTADO, FECHA_CREACION, USUARIO_CREACION) VALUES (1, 'CONTABILIDAD', 1, GETDATE(), 'ADMINISTRADOR')
INSERT INTO AREA_USUARIO_SEDE (ID_AREA_USUARIO_SEDE, DESCRIPCION, ID_ESTADO, FECHA_CREACION, USUARIO_CREACION) VALUES (2, 'FINANZAS', 1, GETDATE(), 'ADMINISTRADOR')
INSERT INTO AREA_USUARIO_SEDE (ID_AREA_USUARIO_SEDE, DESCRIPCION, ID_ESTADO, FECHA_CREACION, USUARIO_CREACION) VALUES (3, 'SISTEMAS', 1, GETDATE(), 'ADMINISTRADOR')
INSERT INTO AREA_USUARIO_SEDE (ID_AREA_USUARIO_SEDE, DESCRIPCION, ID_ESTADO, FECHA_CREACION, USUARIO_CREACION) VALUES (4, 'GERENCIA GENERAL', 1, GETDATE(), 'ADMINISTRADOR')
INSERT INTO AREA_USUARIO_SEDE (ID_AREA_USUARIO_SEDE, DESCRIPCION, ID_ESTADO, FECHA_CREACION, USUARIO_CREACION) VALUES (5, 'PROYECTOS', 1, GETDATE(), 'ADMINISTRADOR')
INSERT INTO AREA_USUARIO_SEDE(ID_AREA_USUARIO_SEDE, DESCRIPCION, ID_ESTADO, FECHA_CREACION, USUARIO_CREACION) VALUES (6, 'ADMINISTRACIÓN', 1, GETDATE(), 'ADMINISTRADOR')
GO

CREATE PROCEDURE TI_SP_CONSULTAR_AREA_USUARIO_SEDE(
	@ID_AREA_USUARIO_SEDE INT, 
	@DESCRIPCION VARCHAR(50), 
	@ID_ESTADO INT
)
AS
BEGIN

	SET NOCOUNT ON
	
	IF (@DESCRIPCION IS NOT NULL)
		SET @DESCRIPCION = '%' + RTRIM(@DESCRIPCION) + '%'
	
	SELECT 
		AUS.ID_AREA_USUARIO_SEDE, AUS.DESCRIPCION, AUS.ID_ESTADO, E.DESCRIPCION
	FROM 
		AREA_USUARIO_SEDE AUS
		INNER JOIN ESTADO E ON AUS.ID_ESTADO = E.ID_ESTADO
	WHERE
		(@ID_AREA_USUARIO_SEDE IS NULL OR AUS.ID_AREA_USUARIO_SEDE = @ID_AREA_USUARIO_SEDE)
		AND (@DESCRIPCION IS NULL OR AUS.DESCRIPCION LIKE @DESCRIPCION)
		AND (@ID_ESTADO IS NULL OR AUS.ID_ESTADO = @ID_ESTADO)
	ORDER BY
		AUS.ID_AREA_USUARIO_SEDE
	
	SET NOCOUNT OFF

END
GO

CREATE PROCEDURE TI_SP_REGISTRAR_AREA_USUARIO_SEDE(
	@DESCRIPCION VARCHAR(50),
	@ID_ESTADO INT, 
	@USUARIO_CREACION VARCHAR(20), 
	@ID INT OUTPUT
)
AS
BEGIN

	SET NOCOUNT ON
	
	DECLARE @ID_AREA_USUARIO_SEDE INT 
	SELECT @ID_AREA_USUARIO_SEDE = MAX(ID_AREA_USUARIO_SEDE) + 1 FROM AREA_USUARIO_SEDE
	
	DECLARE @FECHA_HORA_LOCAL DATETIME
	SET @FECHA_HORA_LOCAL = DATEADD(HH,-5,GETUTCDATE())	
	
	IF (@ID_AREA_USUARIO_SEDE IS NULL)
		SET @ID_AREA_USUARIO_SEDE = 1
		
	INSERT INTO AREA_USUARIO_SEDE (ID_AREA_USUARIO_SEDE, DESCRIPCION, ID_ESTADO, FECHA_CREACION, USUARIO_CREACION) 
	VALUES (@ID_AREA_USUARIO_SEDE, @DESCRIPCION, @ID_ESTADO, @FECHA_HORA_LOCAL, @USUARIO_CREACION)

	SET @ID = @ID_AREA_USUARIO_SEDE
	
	SET NOCOUNT OFF

END
GO

CREATE PROCEDURE TI_SP_ACTUALIZAR_AREA_USUARIO_SEDE(
	@ID_AREA_USUARIO_SEDE INT,
	@DESCRIPCION VARCHAR(50),
	@ID_ESTADO INT, 
	@USUARIO_MODIFICACION VARCHAR(20)
)
AS
BEGIN

	SET NOCOUNT ON
	
	DECLARE @FECHA_HORA_LOCAL DATETIME
	SET @FECHA_HORA_LOCAL = DATEADD(HH,-5,GETUTCDATE())	
	
	UPDATE
		AREA_USUARIO_SEDE
	SET
		DESCRIPCION = ISNULL(@DESCRIPCION, DESCRIPCION), 
		ID_ESTADO = ISNULL(@ID_ESTADO, ID_ESTADO),
		USUARIO_MODIFICACION = @USUARIO_MODIFICACION, 
		FECHA_MODIFICACION = @FECHA_HORA_LOCAL
	WHERE
		ID_AREA_USUARIO_SEDE = @ID_AREA_USUARIO_SEDE
	
	SET NOCOUNT OFF

END
GO

----------------------------TABLA USUARIO_SEDE----------------------------
CREATE TABLE USUARIO_SEDE(
	ID_USUARIO_SEDE INT PRIMARY KEY NOT NULL,
	ID_CLIENTE INT FOREIGN KEY REFERENCES CLIENTE(ID_CLIENTE),
	ID_SEDE INT FOREIGN KEY REFERENCES SEDE_CLIENTE(ID_SEDE),
	NOMBRE VARCHAR(50),
	ID_AREA_USUARIO_SEDE INT FOREIGN KEY REFERENCES AREA_USUARIO_SEDE(ID_AREA_USUARIO_SEDE),
	ID_ESTADO INT FOREIGN KEY REFERENCES ESTADO(ID_ESTADO), 
	FECHA_CREACION DATETIME,
	USUARIO_CREACION VARCHAR(20),
	FECHA_MODIFICACION DATETIME,
	USUARIO_MODIFICACION VARCHAR(20)		
)
GO



ALTER PROCEDURE TI_SP_CONSULTAR_USUARIO_SEDE(
	@ID_USUARIO_SEDE INT,
	@NOMBRE VARCHAR(50), 
	@ID_ESTADO INT,
	@ID_AREA_USUARIO_SEDE INT,
	@ID_SEDE_CLIENTE INT
)
AS
BEGIN

	SET NOCOUNT ON
	
	IF (@NOMBRE IS NOT NULL)
		SET @NOMBRE = '%' + RTRIM(@NOMBRE) + '%'
	
	SELECT 
		U.ID_USUARIO_SEDE, U.NOMBRE, U.ID_AREA_USUARIO_SEDE, AUS.DESCRIPCION, U.ID_ESTADO, E.DESCRIPCION, U.ID_CLIENTE, C.RAZON_SOCIAL, U.ID_SEDE, SC.NOMBRE
	FROM 
		USUARIO_SEDE U
		INNER JOIN AREA_USUARIO_SEDE AUS ON U.ID_AREA_USUARIO_SEDE = AUS.ID_AREA_USUARIO_SEDE
		INNER JOIN ESTADO E ON U.ID_ESTADO = E.ID_ESTADO
		INNER JOIN CLIENTE C ON U.ID_CLIENTE = C.ID_CLIENTE 
		INNER JOIN SEDE_CLIENTE SC ON U.ID_CLIENTE = SC.ID_CLIENTE AND U.ID_SEDE = SC.ID_SEDE
	WHERE
		(@ID_USUARIO_SEDE IS NULL OR U.ID_USUARIO_SEDE = @ID_USUARIO_SEDE)
		AND (@NOMBRE IS NULL OR U.NOMBRE LIKE @NOMBRE)
		AND (@ID_ESTADO IS NULL OR U.ID_ESTADO = @ID_ESTADO)
		AND (@ID_AREA_USUARIO_SEDE IS NULL OR U.ID_AREA_USUARIO_SEDE = @ID_AREA_USUARIO_SEDE)
		AND (@ID_SEDE_CLIENTE IS NULL OR U.ID_SEDE = @ID_SEDE_CLIENTE)
	ORDER BY
		U.ID_USUARIO_SEDE
	
	SET NOCOUNT OFF

END
GO

ALTER PROCEDURE TI_SP_REGISTRAR_USUARIO_SEDE(
	@NOMBRE VARCHAR(50),
	@ID_ESTADO INT,
	@ID_AREA_USUARIO_SEDE INT ,
	@USUARIO_CREACION VARCHAR(20), 
	@ID INT OUTPUT, 
	@ID_CLIENTE INT,
	@ID_SEDE INT
)
AS
BEGIN

	SET NOCOUNT ON
	
	DECLARE @ID_USUARIO_SEDE INT 
	SELECT @ID_USUARIO_SEDE = MAX(ID_USUARIO_SEDE) + 1 FROM USUARIO_SEDE
	
	DECLARE @FECHA_HORA_LOCAL DATETIME
	SET @FECHA_HORA_LOCAL = DATEADD(HH,-5,GETUTCDATE())	
	
	IF (@ID_USUARIO_SEDE IS NULL)
		SET @ID_USUARIO_SEDE = 1
		
	INSERT INTO USUARIO_SEDE (ID_USUARIO_SEDE, ID_AREA_USUARIO_SEDE, NOMBRE, ID_ESTADO, FECHA_CREACION, USUARIO_CREACION, ID_CLIENTE, ID_SEDE) 
	VALUES (@ID_USUARIO_SEDE, @ID_AREA_USUARIO_SEDE, @NOMBRE, @ID_ESTADO, @FECHA_HORA_LOCAL, @USUARIO_CREACION, @ID_CLIENTE, @ID_SEDE)

	SET @ID = @ID_USUARIO_SEDE
	
	SET NOCOUNT OFF

END
GO

CREATE PROCEDURE TI_SP_ACTUALIZAR_USUARIO_SEDE(
	@ID_USUARIO_SEDE INT,
	@ID_AREA_USUARIO_SEDE INT,
	@NOMBRE VARCHAR(50),
	@ID_ESTADO INT, 
	@USUARIO_MODIFICACION VARCHAR(20)
)
AS
BEGIN

	SET NOCOUNT ON
	
	DECLARE @FECHA_HORA_LOCAL DATETIME
	SET @FECHA_HORA_LOCAL = DATEADD(HH,-5,GETUTCDATE())	
	
	UPDATE
		USUARIO_SEDE
	SET
		NOMBRE = ISNULL(@NOMBRE, NOMBRE), 
		ID_ESTADO = ISNULL(@ID_ESTADO, ID_ESTADO),
		ID_AREA_USUARIO_SEDE = ISNULL(@ID_AREA_USUARIO_SEDE, ID_AREA_USUARIO_SEDE),
		USUARIO_MODIFICACION = @USUARIO_MODIFICACION, 
		FECHA_MODIFICACION = @FECHA_HORA_LOCAL
	WHERE
		ID_USUARIO_SEDE = @ID_USUARIO_SEDE
	
	SET NOCOUNT OFF

END
GO